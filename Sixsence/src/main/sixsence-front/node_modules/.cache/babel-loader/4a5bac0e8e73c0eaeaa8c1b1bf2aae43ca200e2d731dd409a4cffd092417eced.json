{"ast":null,"code":"import{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AddressSearch=_ref=>{let{onAddressChange}=_ref;const[address,setAddress]=useState(\"\");// 기본 주소\nconst[additionalAddress,setAdditionalAddress]=useState(\"\");// 추가 주소\nconst[finalAddress,setFinalAddress]=useState(\"\");// 최종 주소\n// 주소 검색 완료 후 호출되는 함수\nconst handleComplete=data=>{let fullAddress=data.address;// 기본 주소\nlet extraAddress=\"\";// 추가 주소\nif(data.addressType===\"R\"){// 도로명 주소일 경우\nif(data.bname){extraAddress+=data.bname;}if(data.buildingName){extraAddress+=extraAddress?`, ${data.buildingName}`:data.buildingName;}fullAddress+=extraAddress?` (${extraAddress})`:\"\";}setAddress(fullAddress);};// 주소 검색 버튼 클릭 시 주소 검색 팝업 열기\nconst openPostcode=()=>{new window.daum.Postcode({oncomplete:handleComplete}).open();};// 주소가 변경될 때 최종 주소를 업데이트하고 부모 컴포넌트에 전달\nuseEffect(()=>{const combinedAddress=`${address} , [${additionalAddress}]`;setFinalAddress(combinedAddress);onAddressChange(combinedAddress);// 부모 컴포넌트로 최종 주소 전달\n},[address,additionalAddress,onAddressChange]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark\",onClick:openPostcode,children:\"\\uC8FC\\uC18C \\uAC80\\uC0C9\"}),address&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uCD94\\uAC00 \\uC8FC\\uC18C \\uC785\\uB825 (\\uC608 : \\uC544\\uD30C\\uD2B8 \\uB3D9 / \\uD638\\uC218)\",value:additionalAddress,onChange:e=>setAdditionalAddress(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\uC120\\uD0DD\\uD55C \\uC8FC\\uC18C: \",address]})]}),address&&additionalAddress&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h5\",{children:finalAddress}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",value:finalAddress})]})]});};export default AddressSearch;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AddressSearch","_ref","onAddressChange","address","setAddress","additionalAddress","setAdditionalAddress","finalAddress","setFinalAddress","handleComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","openPostcode","window","daum","Postcode","oncomplete","open","combinedAddress","children","className","onClick","type","placeholder","value","onChange","e","target"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/login/AddressSearch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst AddressSearch = ({ onAddressChange }) => {\r\n  const [address, setAddress] = useState(\"\"); // 기본 주소\r\n  const [additionalAddress, setAdditionalAddress] = useState(\"\"); // 추가 주소\r\n  const [finalAddress, setFinalAddress] = useState(\"\"); // 최종 주소\r\n\r\n  // 주소 검색 완료 후 호출되는 함수\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address; // 기본 주소\r\n    let extraAddress = \"\"; // 추가 주소\r\n\r\n    if (data.addressType === \"R\") { // 도로명 주소일 경우\r\n      if (data.bname) {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName) {\r\n        extraAddress += extraAddress ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress ? ` (${extraAddress})` : \"\";\r\n    }\r\n\r\n    setAddress(fullAddress);\r\n  };\r\n\r\n  // 주소 검색 버튼 클릭 시 주소 검색 팝업 열기\r\n  const openPostcode = () => {\r\n    new window.daum.Postcode({\r\n      oncomplete: handleComplete,\r\n    }).open();\r\n  };\r\n\r\n  // 주소가 변경될 때 최종 주소를 업데이트하고 부모 컴포넌트에 전달\r\n  useEffect(() => {\r\n    const combinedAddress = `${address} , [${additionalAddress}]`;\r\n    setFinalAddress(combinedAddress);\r\n    onAddressChange(combinedAddress); // 부모 컴포넌트로 최종 주소 전달\r\n  }, [address, additionalAddress, onAddressChange]);\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-dark\" onClick={openPostcode}>주소 검색</button>\r\n      {address && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"추가 주소 입력 (예 : 아파트 동 / 호수)\"\r\n            value={additionalAddress}\r\n            onChange={(e) => setAdditionalAddress(e.target.value)}\r\n          />\r\n          <div>선택한 주소: {address}</div>\r\n        </div>\r\n      )}\r\n      {address && additionalAddress && (\r\n        <>\r\n          <h5>{finalAddress}</h5>\r\n          <input type=\"hidden\" value={finalAddress} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressSearch;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE5C,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC5C,KAAM,CAACa,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChE,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEtD;AACA,KAAM,CAAAiB,cAAc,CAAIC,IAAI,EAAK,CAC/B,GAAI,CAAAC,WAAW,CAAGD,IAAI,CAACP,OAAO,CAAE;AAChC,GAAI,CAAAS,YAAY,CAAG,EAAE,CAAE;AAEvB,GAAIF,IAAI,CAACG,WAAW,GAAK,GAAG,CAAE,CAAE;AAC9B,GAAIH,IAAI,CAACI,KAAK,CAAE,CACdF,YAAY,EAAIF,IAAI,CAACI,KAAK,CAC5B,CACA,GAAIJ,IAAI,CAACK,YAAY,CAAE,CACrBH,YAAY,EAAIA,YAAY,CAAG,KAAKF,IAAI,CAACK,YAAY,EAAE,CAAGL,IAAI,CAACK,YAAY,CAC7E,CACAJ,WAAW,EAAIC,YAAY,CAAG,KAAKA,YAAY,GAAG,CAAG,EAAE,CACzD,CAEAR,UAAU,CAACO,WAAW,CAAC,CACzB,CAAC,CAED;AACA,KAAM,CAAAK,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CAAAC,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAC,CACvBC,UAAU,CAAEX,cACd,CAAC,CAAC,CAACY,IAAI,CAAC,CAAC,CACX,CAAC,CAED;AACA5B,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6B,eAAe,CAAG,GAAGnB,OAAO,OAAOE,iBAAiB,GAAG,CAC7DG,eAAe,CAACc,eAAe,CAAC,CAChCpB,eAAe,CAACoB,eAAe,CAAC,CAAE;AACpC,CAAC,CAAE,CAACnB,OAAO,CAAEE,iBAAiB,CAAEH,eAAe,CAAC,CAAC,CAEjD,mBACEL,KAAA,QAAA0B,QAAA,eACE5B,IAAA,WAAQ6B,SAAS,CAAC,cAAc,CAACC,OAAO,CAAET,YAAa,CAAAO,QAAA,CAAC,2BAAK,CAAQ,CAAC,CACrEpB,OAAO,eACNN,KAAA,QAAA0B,QAAA,eACE5B,IAAA,UACE+B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,4FAA2B,CACvCC,KAAK,CAAEvB,iBAAkB,CACzBwB,QAAQ,CAAGC,CAAC,EAAKxB,oBAAoB,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACvD,CAAC,cACF/B,KAAA,QAAA0B,QAAA,EAAK,mCAAQ,CAACpB,OAAO,EAAM,CAAC,EACzB,CACN,CACAA,OAAO,EAAIE,iBAAiB,eAC3BR,KAAA,CAAAE,SAAA,EAAAwB,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAKhB,YAAY,CAAK,CAAC,cACvBZ,IAAA,UAAO+B,IAAI,CAAC,QAAQ,CAACE,KAAK,CAAErB,YAAa,CAAE,CAAC,EAC5C,CACH,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}