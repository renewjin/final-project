{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import axios from'axios';import ItemNavigationBar from'./ItemNavigationBar';import LoginContext from'../login/LoginContext';import useItemPayment from'../hooks/useItemPayment';import useCart from'../hooks/useCart';// 장바구니쪽에서 넘어오는 데이터 1개 이상일 수 있으므로 list형태로 넣어야함\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ItemPurchase=()=>{var _loginMember$memberPo,_loginMember$memberPo2;//const { paymentData, setPaymentData } = useItemPayment();\nconst{loginMember}=useContext(LoginContext);//console.log(\"itempurchase login : \", loginMember);\nconst{cartItemCount}=useCart();const location=useLocation();//const {itemNo, itemImage, itemName, itempayCount, itempayPrice} = location.state || {};\nconst{items}=location.state||{item:[]};// cart에서 넘어온 데이터는 안에 shoppingNo가 존재함\nconst navigate=useNavigate();const[orderUserName,setOrderUserName]=useState('');const[orderUserMail,setOrderUserMail]=useState('');const[userInfoChecked,setUserInfoChecked]=useState(false);const[usingPoint,setUsingPoint]=useState(0);const[usingAllPointChecked,setUsingAllPointChecked]=useState(false);const[totalPayment,setTotalPayment]=useState(0);//console.info(\"itempurchase!!!!!!!!!!!!!!!!!!!!!!!! : \", items);\n//console.info(\"itempurchase!!!!!!!!!!!!!!!!!!!!!!!! : \", items.length);\n/*\r\n    console.info(\"itempurchase : \", itemNo);\r\n    console.info(\"itempurchase : \", itemImage);\r\n    console.info(\"itempurchase : \", itemName);\r\n    console.info(\"itempurchase : \", itempayCount);\r\n    console.info(\"itempurchase : \", itempayPrice);\r\n    */// 총 상품금액 계산\n/*\r\n    const itemPrices = items.map(item => item.itemPayPrice);\r\n\r\n    let totalItemsPrice = 0;\r\n    itemPrices.forEach(price => {\r\n        totalItemsPrice += price;\r\n    });\r\n    */// reduce() : 배열의 각 요소를 순회하며 주어진 함수에 따라 배열을 하나의 값으로 줄이는 메서드\n// reduce()는 두개의 인자를 받음\n// acc : 누적값, item : items배열의 개별객체\n// 0은 acc 의 초기값\nconst totalItemsPrice=items.reduce((acc,item)=>acc+item.itemPayPrice,0);useEffect(()=>{setTotalPayment(totalItemsPrice-usingPoint);},[usingPoint,totalItemsPrice]);const handleUserInfoChange=e=>{const ischecked=e.target.checked;setUserInfoChecked(ischecked);setOrderUserName(ischecked?loginMember.memberName:\"\");setOrderUserMail(ischecked?loginMember.memberEmail:\"\");};const inputUsingPoint=value=>{//console.log(\"totalItemsPrice\",totalItemsPrice)\nif(Number(value)>Number(totalItemsPrice)){setUsingPoint(totalItemsPrice);}else{setUsingPoint(Number(value)>Number(loginMember.memberPoint)?Number(loginMember.memberPoint):Number(value));}//setUsingPoint(Number(value) > Number(loginMember.memberPoint) ? Number(loginMember.memberPoint) : Number(value))\n/* \r\n        console.log(\"loginMember.memberPoint :\", loginMember.memberPoint);\r\n        console.log(\"value :\", value);\r\n        if(Number(value) > Number(loginMember.memberPoint)) {\r\n            setUsingPoint(Number(loginMember.memberPoint));\r\n        } else {\r\n            setUsingPoint(Number(value));\r\n        }\r\n        */};const handleUseAllPointsChange=e=>{const ischecked=e.target.checked;setUsingAllPointChecked(ischecked);//setUsingPoint(ischecked ? loginMember.memberPoint : 0);\n//setUsingPoint(ischecked ? loginMember.memberPoint || 0 : 0);\nif(ischecked&&Number(loginMember.memberPoint)>Number(totalItemsPrice)){setUsingPoint(totalItemsPrice);}else{setUsingPoint(ischecked?loginMember.memberPoint||0:0);}//setUsingPoint(ischecked ? loginMember.memberPoint || 0 : 0); // loginMember.memberPoint 이 null인 경우 0으로 처리\n};const clickedPayment=()=>{if(!orderUserName||!orderUserMail){alert('주문자 정보가 빠져있습니다.');return;}let phone=loginMember.memberPhone;let modifyPhone=phone.replace(/-/g,'');//console.log(\"modifyPhone\",modifyPhone);\n//console.log(\"items!!!!!\", items);\nconst itemPaymentData={amount:totalPayment,//orderName: 상품명,\nmemberNo:loginMember.memberNo,itempay_buyer:orderUserName,itempay_email:orderUserMail,customerMobilePhone:modifyPhone,itempay_point_use:usingPoint===0?\"N\":\"Y\",itempay_point:usingPoint,items:items.map(item=>({itemNo:item.itemNo,itemName:item.itemName,itemCount:item.itemPayCount,itemPayPrice:item.itemPayPrice,shoppingNo:item.shoppingNo}))};//setPaymentData(itemPaymentData);\n//console.log(\"itemPaymentData\", itemPaymentData);\n//navigate('/payment/checkout', {state: {itemPayInfo: itemPaymentData}});\n// 결제금액이 0원일경우 tosspay로 가지말고 바로 결제완료 페이지로 이동\n// 토스페이 결제금액이 0이면 오류발생\nsessionStorage.setItem('paymentCompleted',\"\");if(totalPayment==0){//console.log(\"000000000000000000000000\")\nnavigate('/store/payment/complete',{state:{paymentInfo:itemPaymentData}});}else{navigate('/store/payment/checkout',{state:{itemPayInfo:itemPaymentData}});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"item-nav\",children:/*#__PURE__*/_jsx(ItemNavigationBar,{cartItemCount:cartItemCount})}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-payment-contain\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item-payment-order-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC8FC\\uBB38\\uC790 \\uC815\\uBCF4 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"order-name\",value:orderUserName,required:true,onChange:e=>{setOrderUserName(e.target.value);},disabled:userInfoChecked}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"order-email\",value:orderUserMail,required:true,onChange:e=>{setOrderUserMail(e.target.value);},disabled:userInfoChecked}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:userInfoChecked,onChange:handleUserInfoChange}),\" \",/*#__PURE__*/_jsx(\"label\",{children:\"\\uC8FC\\uBB38\\uC790\\uC640 \\uB3D9\\uC77C\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-payment-item-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uAD6C\\uB9E4\\uC0C1\\uD488 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",children:\"\\uC0C1\\uD488\\uBA85\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uD310\\uB9E4\\uAE08\\uC561\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC218\\uB7C9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uAD6C\\uB9E4\\uAE08\\uC561\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:items.map(item=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"img\",{src:item.itemImage})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:item.itemName}),/*#__PURE__*/_jsx(\"p\",{children:item.itemPackage})]}),/*#__PURE__*/_jsx(\"td\",{children:item.itemPrice}),/*#__PURE__*/_jsx(\"td\",{children:item.itemPayCount}),/*#__PURE__*/_jsx(\"td\",{children:item.itemPayPrice})]},item.itemNo))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-payment-point-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD3EC\\uC778\\uD2B8\"}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uC0AC\\uC6A9\\uD560 \\uD3EC\\uC778\\uD2B8\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:usingPoint,min:0,max:(_loginMember$memberPo=loginMember===null||loginMember===void 0?void 0:loginMember.memberPoint)!==null&&_loginMember$memberPo!==void 0?_loginMember$memberPo:0//onChange={(e) => inputUsingPoint(e.target.value)} \n,onChange:e=>inputUsingPoint(e.target.value),disabled:usingAllPointChecked}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uC0AC\\uC6A9\\uAC00\\uB2A5\\uD55C \\uD3EC\\uC778\\uD2B8\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:(_loginMember$memberPo2=loginMember===null||loginMember===void 0?void 0:loginMember.memberPoint)!==null&&_loginMember$memberPo2!==void 0?_loginMember$memberPo2:0,readOnly:true/*value={로그인한유저테이블의point값} />*/}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:usingAllPointChecked,onChange:handleUseAllPointsChange,disabled:(loginMember===null||loginMember===void 0?void 0:loginMember.memberPoint)===null||(loginMember===null||loginMember===void 0?void 0:loginMember.memberPoint)==='0'}),\" \",/*#__PURE__*/_jsx(\"label\",{children:\"\\uC804\\uCCB4\\uC0AC\\uC6A9\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item-payment-pay-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uACB0\\uC81C\\uAE08\\uC561\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"\\uC0C1\\uD488\\uAE08\\uC561\"}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:\"\\uD560\\uC778\\uAE08\\uC561\"}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:\"\\uACB0\\uC81C\\uAE08\\uC561\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:totalItemsPrice}),/*#__PURE__*/_jsx(\"td\",{children:\"-\"}),/*#__PURE__*/_jsx(\"td\",{children:usingPoint}),/*#__PURE__*/_jsx(\"td\",{children:\"=\"}),/*#__PURE__*/_jsx(\"td\",{children:totalPayment})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"item-payment-btn\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>clickedPayment(),children:\"\\uACB0\\uC81C\\uD558\\uAE30\"})})]})]});};export default ItemPurchase;","map":{"version":3,"names":["React","useContext","useEffect","useState","useLocation","useNavigate","axios","ItemNavigationBar","LoginContext","useItemPayment","useCart","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ItemPurchase","_loginMember$memberPo","_loginMember$memberPo2","loginMember","cartItemCount","location","items","state","item","navigate","orderUserName","setOrderUserName","orderUserMail","setOrderUserMail","userInfoChecked","setUserInfoChecked","usingPoint","setUsingPoint","usingAllPointChecked","setUsingAllPointChecked","totalPayment","setTotalPayment","totalItemsPrice","reduce","acc","itemPayPrice","handleUserInfoChange","e","ischecked","target","checked","memberName","memberEmail","inputUsingPoint","value","Number","memberPoint","handleUseAllPointsChange","clickedPayment","alert","phone","memberPhone","modifyPhone","replace","itemPaymentData","amount","memberNo","itempay_buyer","itempay_email","customerMobilePhone","itempay_point_use","itempay_point","map","itemNo","itemName","itemCount","itemPayCount","shoppingNo","sessionStorage","setItem","paymentInfo","itemPayInfo","children","className","type","id","required","onChange","disabled","colSpan","src","itemImage","itemPackage","itemPrice","min","max","readOnly","onClick"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/store/ItemPurchase.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport ItemNavigationBar from './ItemNavigationBar';\r\nimport LoginContext from '../login/LoginContext';\r\nimport useItemPayment from '../hooks/useItemPayment';\r\nimport useCart from '../hooks/useCart';\r\n// 장바구니쪽에서 넘어오는 데이터 1개 이상일 수 있으므로 list형태로 넣어야함\r\nconst ItemPurchase = () => {\r\n    //const { paymentData, setPaymentData } = useItemPayment();\r\n    const { loginMember } = useContext(LoginContext);\r\n    //console.log(\"itempurchase login : \", loginMember);\r\n    const { cartItemCount } = useCart();\r\n\r\n    const location = useLocation();\r\n    //const {itemNo, itemImage, itemName, itempayCount, itempayPrice} = location.state || {};\r\n    const {items} = location.state || {item: []}; // cart에서 넘어온 데이터는 안에 shoppingNo가 존재함\r\n    const navigate = useNavigate();\r\n\r\n    const [orderUserName, setOrderUserName] = useState('');\r\n    const [orderUserMail, setOrderUserMail] = useState('');\r\n    const [userInfoChecked, setUserInfoChecked] = useState(false);\r\n\r\n    const [usingPoint, setUsingPoint] = useState(0);\r\n    const [usingAllPointChecked, setUsingAllPointChecked] = useState(false);\r\n\r\n    const [totalPayment, setTotalPayment] = useState(0);\r\n\r\n    //console.info(\"itempurchase!!!!!!!!!!!!!!!!!!!!!!!! : \", items);\r\n    //console.info(\"itempurchase!!!!!!!!!!!!!!!!!!!!!!!! : \", items.length);\r\n    /*\r\n    console.info(\"itempurchase : \", itemNo);\r\n    console.info(\"itempurchase : \", itemImage);\r\n    console.info(\"itempurchase : \", itemName);\r\n    console.info(\"itempurchase : \", itempayCount);\r\n    console.info(\"itempurchase : \", itempayPrice);\r\n    */\r\n\r\n    // 총 상품금액 계산\r\n    /*\r\n    const itemPrices = items.map(item => item.itemPayPrice);\r\n\r\n    let totalItemsPrice = 0;\r\n    itemPrices.forEach(price => {\r\n        totalItemsPrice += price;\r\n    });\r\n    */\r\n    // reduce() : 배열의 각 요소를 순회하며 주어진 함수에 따라 배열을 하나의 값으로 줄이는 메서드\r\n    // reduce()는 두개의 인자를 받음\r\n    // acc : 누적값, item : items배열의 개별객체\r\n    // 0은 acc 의 초기값\r\n    const totalItemsPrice = items.reduce((acc, item) => acc + item.itemPayPrice, 0);\r\n\r\n    useEffect (()=>{\r\n        setTotalPayment(totalItemsPrice- usingPoint);\r\n    }, [usingPoint, totalItemsPrice])\r\n\r\n    const handleUserInfoChange = (e) => {\r\n        const ischecked = e.target.checked;\r\n        setUserInfoChecked(ischecked);\r\n        setOrderUserName(ischecked ? loginMember.memberName : \"\");\r\n        setOrderUserMail(ischecked ? loginMember.memberEmail : \"\");\r\n    }\r\n\r\n    const inputUsingPoint = (value) => {\r\n        //console.log(\"totalItemsPrice\",totalItemsPrice)\r\n        if (Number(value) > Number(totalItemsPrice)) {\r\n            setUsingPoint(totalItemsPrice)\r\n        } else {\r\n            setUsingPoint(Number(value) > Number(loginMember.memberPoint) ? Number(loginMember.memberPoint) : Number(value))\r\n        }\r\n        //setUsingPoint(Number(value) > Number(loginMember.memberPoint) ? Number(loginMember.memberPoint) : Number(value))\r\n        /* \r\n        console.log(\"loginMember.memberPoint :\", loginMember.memberPoint);\r\n        console.log(\"value :\", value);\r\n        if(Number(value) > Number(loginMember.memberPoint)) {\r\n            setUsingPoint(Number(loginMember.memberPoint));\r\n        } else {\r\n            setUsingPoint(Number(value));\r\n        }\r\n        */\r\n    }\r\n\r\n    const handleUseAllPointsChange = (e) => {\r\n        const ischecked = e.target.checked;\r\n        setUsingAllPointChecked(ischecked);\r\n        //setUsingPoint(ischecked ? loginMember.memberPoint : 0);\r\n        //setUsingPoint(ischecked ? loginMember.memberPoint || 0 : 0);\r\n        if(ischecked && Number(loginMember.memberPoint) >  Number(totalItemsPrice) ) {\r\n            setUsingPoint(totalItemsPrice)\r\n        } else {\r\n            setUsingPoint(ischecked ? loginMember.memberPoint || 0 : 0);\r\n        }\r\n        //setUsingPoint(ischecked ? loginMember.memberPoint || 0 : 0); // loginMember.memberPoint 이 null인 경우 0으로 처리\r\n    }\r\n\r\n\r\n    const clickedPayment = () => {\r\n        if (!orderUserName || !orderUserMail) {\r\n            alert('주문자 정보가 빠져있습니다.');\r\n            return;\r\n        }\r\n\r\n        let phone = loginMember.memberPhone;\r\n        let modifyPhone = phone.replace(/-/g,'');\r\n        //console.log(\"modifyPhone\",modifyPhone);\r\n        \r\n        //console.log(\"items!!!!!\", items);\r\n        const itemPaymentData = {\r\n            amount: totalPayment,\r\n            //orderName: 상품명,\r\n            memberNo: loginMember.memberNo,\r\n            itempay_buyer: orderUserName,\r\n            itempay_email: orderUserMail,\r\n            customerMobilePhone: modifyPhone,\r\n            itempay_point_use: (usingPoint === 0) ? \"N\":\"Y\",\r\n            itempay_point: usingPoint,\r\n            items: items.map(item => ({\r\n                itemNo: item.itemNo,\r\n                itemName: item.itemName,\r\n                itemCount: item.itemPayCount,\r\n                itemPayPrice: item.itemPayPrice,\r\n                shoppingNo: item.shoppingNo\r\n            }))\r\n        }\r\n\r\n        //setPaymentData(itemPaymentData);\r\n        //console.log(\"itemPaymentData\", itemPaymentData);\r\n\r\n        //navigate('/payment/checkout', {state: {itemPayInfo: itemPaymentData}});\r\n        // 결제금액이 0원일경우 tosspay로 가지말고 바로 결제완료 페이지로 이동\r\n        // 토스페이 결제금액이 0이면 오류발생\r\n        sessionStorage.setItem('paymentCompleted', \"\");\r\n        if (totalPayment == 0) {\r\n            //console.log(\"000000000000000000000000\")\r\n            navigate('/store/payment/complete', {state: {paymentInfo: itemPaymentData}})\r\n        } else {\r\n            navigate('/store/payment/checkout', {state: {itemPayInfo: itemPaymentData}});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='item-nav'>\r\n            <ItemNavigationBar cartItemCount={cartItemCount} />\r\n        </div>\r\n        <div className='item-payment-contain'>\r\n            <div className='item-payment-order-info'>\r\n                <h3>주문자 정보 확인</h3>\r\n                \r\n                    <label>이름</label>\r\n                    <input type='text' id='order-name' value={orderUserName} \r\n                                                        required \r\n                                                        onChange={e=> {setOrderUserName(e.target.value)}}\r\n                                                        disabled={userInfoChecked}></input>\r\n                \r\n                \r\n                    <label>이메일</label>\r\n                    <input type='email' id='order-email' value={orderUserMail} \r\n                                                        required \r\n                                                        onChange={e=> {setOrderUserMail(e.target.value)}}\r\n                                                        disabled={userInfoChecked}></input>\r\n                \r\n                    <input type='checkbox' checked={userInfoChecked} onChange={handleUserInfoChange}></input> <label>주문자와 동일</label>\r\n                    {/* input is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.\r\n                    <input></input>사이에 값이 있으면 발생\r\n                    */}\r\n                \r\n            </div>\r\n            <div className='item-payment-item-info'>\r\n                <h3>구매상품 정보</h3>\r\n                <table>\r\n                    {/* list를 for루프 돌려서  */}\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan=\"2\">상품명</th>{/* 상품이미지 + 상품명 + 상품package */}\r\n                            <th>판매금액</th>\r\n                            <th>수량</th>\r\n                            <th>구매금액</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items.map(item => (\r\n                            <tr key={item.itemNo}>\r\n                                <td><img src={item.itemImage}/></td>\r\n                                <td>\r\n                                    <h5>{item.itemName}</h5>\r\n                                    <p>{item.itemPackage}</p>\r\n                                </td>\r\n                                <td>{item.itemPrice}</td>\r\n                                <td>{item.itemPayCount}</td>\r\n                                <td>{item.itemPayPrice}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='item-payment-point-info'>\r\n                <h3>포인트</h3>\r\n                \r\n                <label>사용할 포인트</label>\r\n                {/*<input type='number' value={usingPoint} min={0} max={loginMember.memberPoint}  */}\r\n                {/* loginMember.memberPoint의 값이 null 인 경우 처리 */}\r\n                <input type='number' value={usingPoint} min={0} max={loginMember?.memberPoint ?? 0}  \r\n                //onChange={(e) => inputUsingPoint(e.target.value)} \r\n                onChange={(e) => inputUsingPoint(e.target.value)} \r\n                disabled={usingAllPointChecked}/>\r\n                \r\n                <label>사용가능한 포인트</label>\r\n                {/*<input type='number' value={loginMember.memberPoint} readOnly />*/}\r\n                {/* loginMember.memberPoint의 값이 null 인 경우 처리 */}\r\n                <input type='number' value={loginMember?.memberPoint ?? 0} readOnly /*value={로그인한유저테이블의point값} />*/ /> \r\n                \r\n                \r\n                {/* 체크되면 사용할 포인트에 사용가능한 값으로 넣어주기, 체크해제되면 input에 사용할 포인트 값 비워주기 */}\r\n                {/*<input type='checkbox' onClick={AllUsingPoing}></input> <label>전체사용</label>*/}\r\n                <input type='checkbox' checked={usingAllPointChecked} onChange={handleUseAllPointsChange} disabled={loginMember?.memberPoint === null || loginMember?.memberPoint === '0'}></input> <label>전체사용</label>\r\n                \r\n                \r\n            </div>\r\n\r\n            <div className='item-payment-pay-info'>\r\n                <h3>결제금액</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>상품금액</td>\r\n                            <td></td>\r\n                            <td>할인금액</td>\r\n                            <td></td>\r\n                            <td>결제금액</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{totalItemsPrice}</td>\r\n                            <td>-</td>\r\n                            <td>{usingPoint}</td>\r\n                            <td>=</td>\r\n                            <td>{totalPayment}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {/* \r\n            <div className='item-payment-pay-method'>\r\n                <h3>결제수단</h3>\r\n            </div>\r\n            */}\r\n            <div className='item-payment-btn'>\r\n                <button onClick={()=> clickedPayment()}>결제하기</button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default ItemPurchase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}