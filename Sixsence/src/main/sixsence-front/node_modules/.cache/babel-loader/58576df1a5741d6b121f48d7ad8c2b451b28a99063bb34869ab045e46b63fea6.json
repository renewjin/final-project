{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import ItemNavigationBar from'./ItemNavigationBar';import{Link,useLocation,useNavigate}from'react-router-dom';import LoginContext from'../login/LoginContext';import axios from'axios';import useCart from'../hooks/useCart';import'./Item.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ItemPaymentComplete=()=>{//const { deleteCartItem } = useCart();\nconst{loginMember,setLoginMember}=useContext(LoginContext);const location=useLocation();const navigate=useNavigate();const{paymentInfo}=location.state||{};const[receiptNumber,setReceiptNumber]=useState(null);//const [receiptNumber, setReceiptNumber] = useState(0);\n//console.log(\"paymentInfo\", paymentInfo)\n//console.log(\"loginMember\", loginMember)\n//console.log(\"shoppingNo\", paymentInfo.items.shoppingNo)\n/* -> 새로고침하면 DB에 계속 들어감*/useEffect(()=>{if(loginMember&&paymentInfo.itempay_point_use===\"Y\"){memberPointUpdate();}},[]);useEffect(()=>{//deleteItem()\ndeleteCartItem();},[]);useEffect(()=>{//console.log(sessionStorage.getItem('paymentCompleted'))\nif(sessionStorage.getItem('paymentCompleted')){return;}addPaymentInfo();sessionStorage.setItem('paymentCompleted',true);},[]);/*\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('paymentCompleted')) {\r\n            // 이미 결제 정보가 저장된 경우, 다른 페이지로 리다이렉트\r\n            //navigate('/some-other-page');\r\n            return;\r\n        }\r\n\r\n        if (loginMember && paymentInfo) {\r\n            if (paymentInfo.itempay_point_use === \"Y\") {\r\n                memberPointUpdate();\r\n            }\r\n            deleteCartItem();\r\n            addPaymentInfo();\r\n            sessionStorage.setItem('paymentCompleted', 'true');  // 플래그 설정\r\n        }\r\n    }, [loginMember, paymentInfo]);\r\n    *//*\r\n    useEffect(()=> {\r\n        setReceiptNumber(Math.floor(Math.random() * 100000000));\r\n    },[])\r\n    */// 포인트업데이트\nconst memberPointUpdate=async()=>{if(!loginMember||!paymentInfo)return;const updatedPoint=Number(loginMember.memberPoint)-Number(paymentInfo.itempay_point);//console.log(updatedPoint);\nawait axios.put(\"/member-point-update\",null,{params:{memberNo:paymentInfo.memberNo,memberPoint:updatedPoint}}).then(response=>{console.log(\"asdfasdfasdfasd\",response);}).catch(error=>{console.log(\"오류발생\");});// 로그인한 아이디의 포인트값 변경\nsetLoginMember({...loginMember,memberPoint:updatedPoint});console.log(\"포인트 업데이트 완료\",loginMember);};// 장바구니를 통해 결제 했을 때 해당 장바구니 목록 삭제\n/*\r\n    const deleteItem = async () => {\r\n        \r\n        if(!paymentInfo.items[0].shoppingNo) {\r\n            console.log(\"99999999999999999\")\r\n        } else {\r\n            console.log('444444444444444')\r\n        }\r\n        \r\n        paymentInfo.items.forEach((item) => {\r\n            console.log(\"12312313\",item.shoppingNo)\r\n            if(item.shoppingNo) {// 장바구니에 있는 항목이면\r\n                console.log(item.shoppingNo)\r\n                deleteCartItem(item.shoppingNo);\r\n            } else {\r\n                console.log(\"장바구니에 없는 상품\")\r\n            }\r\n            \r\n        });\r\n    }\r\n    */const deleteCartItem=async()=>{if(!paymentInfo||!paymentInfo.items){console.log(\"paymentInfo나 items가 없습니다.\");return;}paymentInfo.items.forEach(async item=>{if(item.shoppingNo){//console.log('shoppingNo', item.shoppingNo);\nawait axios.delete('/delete-cart-item',{params:{shoppingNo:item.shoppingNo}}).then(response=>{console.log(\"해당아이템이 장바구니에서 삭제되었습니다.\");}).catch(error=>{console.log(\"해당아이템이 장바구니에서 삭제중 오류발생\");});}else{console.log(`shoppingNo가 없습니다. item = ${item}`);}});};// 결제정보 입력\nconst addPaymentInfo=async()=>{//console.log(\"너 왜 두번이나 호출되니?????????\")\n//index.js에서 React.StrictMode 삭제 \n//두 번 호출: React.StrictMode에서는 useEffect와 같은 훅이 두 번 호출될 수 있음\n// 결제영수증번호 랜덤숫자\nconst receiptNumber=Math.floor(Math.random()*100000000);setReceiptNumber(receiptNumber);//console.log(\"receiptNumber \",receiptNumber);\nif(!paymentInfo||!paymentInfo.items){console.log(\"paymentInfo나 items가 없습니다.\");return;}let usePoint=Number(paymentInfo.itempay_point);paymentInfo.items.forEach(async item=>{//console.log(\"item :\", item)\n//console.log(\"paymentInfo\", paymentInfo)\nconst itemPaymentData={itemNo:item.itemNo,memberNo:paymentInfo.memberNo,itempayPrice:Number(item.itemPayPrice)>usePoint?Number(item.itemPayPrice)-usePoint:0,itempayCount:item.itemCount,itempayBuyer:paymentInfo.itempay_buyer,itempayEmail:paymentInfo.itempay_email,//itempayPointUse: (usePoint > 0 ? \"Y\" : \"N\"),\nitempayPointUse:paymentInfo.itempay_point_use,itempayPoint:usePoint>=Number(item.itemPayPrice)?Number(item.itemPayPrice):usePoint,itempayRefund:\"N\",itempayReceipt:receiptNumber};usePoint=usePoint-Number(item.itemPayPrice)<0?0:usePoint-Number(item.itemPayPrice);//console.log(\"!!!!!usePoint!!!!!\",usePoint);\nawait axios.post('/add-item-payment',itemPaymentData).then(response=>{console.log(\"결제정보 DB등록 성공\");//console.log(\"!!!itemPaymentData\", itemPaymentData)\n}).catch(error=>{console.log(\"결제정보 DB\");});});sendEmail(receiptNumber);};// 결제확인 메일 보내기\n// 필요정보 : 결제품목(아이템명(외 O개)), 구매자, 구매자메일, 구매금액, 사용포인트, 구매영수증번호, 구매일자\nconst sendEmail=async receiptNumber=>{//console.log(\"11111\",receiptNumber)\n//console.log(\"22222\",paymentInfo)\n//console.log(\"33333\",loginMember)\nconst paymentEmailInfo={itempayName:paymentInfo.items.length>1?paymentInfo.items[0].itemName+\" 외 \"+(paymentInfo.items.length-1)+\" 건\":paymentInfo.items[0].itemName,itempayBuyer:paymentInfo.itempay_buyer,itempayEmail:paymentInfo.itempay_email,itempayPrice:paymentInfo.amount,itempayPoint:paymentInfo.itempay_point,itempayReceipt:receiptNumber,itempayDate:new Date().toISOString()};await axios.post(\"/send-email-paymentinfo\",paymentEmailInfo).then(response=>{console.log(\"결제확인 메일 전송완료\");}).catch(error=>{console.log(\"결제확인 메일 전송실패\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"box_section\",style:{width:\"600px\"},children:[/*#__PURE__*/_jsx(\"img\",{width:\"100px\",src:\"https://static.toss.im/illusts/check-blue-spot-ending-frame.png\",alt:\"Success\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uACB0\\uC81C\\uB97C \\uC644\\uB8CC\\uD588\\uC5B4\\uC694\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"50px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uAD6C\\uB9E4 \\uC601\\uC218\\uC99D\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"amount\",children:receiptNumber})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uC0C1\\uD488\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"itemName\",children:paymentInfo.items.length>1?paymentInfo.items[0].itemName+\" 외 \"+(paymentInfo.items.length-1)+\" 건\":paymentInfo.items[0].itemName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uACB0\\uC81C\\uAE08\\uC561\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"amount\",children:paymentInfo.amount})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uC0AC\\uC6A9\\uD55C \\uD3EC\\uC778\\uD2B8\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"usingPoint\",children:paymentInfo.itempay_point})]}),/*#__PURE__*/_jsx(\"div\",{className:\"home-btn\",children:/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"})})})]});};export default ItemPaymentComplete;","map":{"version":3,"names":["React","useContext","useEffect","useState","ItemNavigationBar","Link","useLocation","useNavigate","LoginContext","axios","useCart","jsx","_jsx","jsxs","_jsxs","ItemPaymentComplete","loginMember","setLoginMember","location","navigate","paymentInfo","state","receiptNumber","setReceiptNumber","itempay_point_use","memberPointUpdate","deleteCartItem","sessionStorage","getItem","addPaymentInfo","setItem","updatedPoint","Number","memberPoint","itempay_point","put","params","memberNo","then","response","console","log","catch","error","items","forEach","item","shoppingNo","delete","Math","floor","random","usePoint","itemPaymentData","itemNo","itempayPrice","itemPayPrice","itempayCount","itemCount","itempayBuyer","itempay_buyer","itempayEmail","itempay_email","itempayPointUse","itempayPoint","itempayRefund","itempayReceipt","post","sendEmail","paymentEmailInfo","itempayName","length","itemName","amount","itempayDate","Date","toISOString","className","style","width","children","src","alt","marginTop","id","to"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/store/ItemPaymentComplete.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport ItemNavigationBar from './ItemNavigationBar';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport LoginContext from '../login/LoginContext';\r\nimport axios from 'axios';\r\nimport useCart from '../hooks/useCart';\r\nimport './Item.css'\r\n\r\nconst ItemPaymentComplete = () => {\r\n    //const { deleteCartItem } = useCart();\r\n    const { loginMember, setLoginMember } = useContext(LoginContext);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { paymentInfo } = location.state || {};\r\n    const [receiptNumber, setReceiptNumber] = useState(null);\r\n    //const [receiptNumber, setReceiptNumber] = useState(0);\r\n    \r\n    //console.log(\"paymentInfo\", paymentInfo)\r\n    //console.log(\"loginMember\", loginMember)\r\n    //console.log(\"shoppingNo\", paymentInfo.items.shoppingNo)\r\n\r\n    /* -> 새로고침하면 DB에 계속 들어감*/\r\n    useEffect(()=> {\r\n        if(loginMember && (paymentInfo.itempay_point_use ===\"Y\")) {\r\n            memberPointUpdate()\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=> {\r\n        //deleteItem()\r\n        deleteCartItem()\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        //console.log(sessionStorage.getItem('paymentCompleted'))\r\n        if (sessionStorage.getItem('paymentCompleted')) {\r\n            return\r\n        }\r\n        addPaymentInfo();\r\n        sessionStorage.setItem('paymentCompleted', true);\r\n    }, [])\r\n    \r\n\r\n    /*\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('paymentCompleted')) {\r\n            // 이미 결제 정보가 저장된 경우, 다른 페이지로 리다이렉트\r\n            //navigate('/some-other-page');\r\n            return;\r\n        }\r\n\r\n        if (loginMember && paymentInfo) {\r\n            if (paymentInfo.itempay_point_use === \"Y\") {\r\n                memberPointUpdate();\r\n            }\r\n            deleteCartItem();\r\n            addPaymentInfo();\r\n            sessionStorage.setItem('paymentCompleted', 'true');  // 플래그 설정\r\n        }\r\n    }, [loginMember, paymentInfo]);\r\n    */\r\n\r\n\r\n\r\n    /*\r\n    useEffect(()=> {\r\n        setReceiptNumber(Math.floor(Math.random() * 100000000));\r\n    },[])\r\n    */\r\n    // 포인트업데이트\r\n    const memberPointUpdate = async () => {\r\n        if (!loginMember || !paymentInfo) return;\r\n        const updatedPoint = Number(loginMember.memberPoint) - Number(paymentInfo.itempay_point)\r\n        //console.log(updatedPoint);\r\n        await axios.put(\"/member-point-update\",null, {\r\n            params: {\r\n                memberNo: paymentInfo.memberNo,\r\n                memberPoint: updatedPoint\r\n            }\r\n        })\r\n        .then((response) => {\r\n            console.log(\"asdfasdfasdfasd\",response);\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"오류발생\")\r\n        })\r\n        // 로그인한 아이디의 포인트값 변경\r\n        setLoginMember({\r\n            ...loginMember,\r\n            memberPoint: updatedPoint,\r\n        });\r\n\r\n        console.log(\"포인트 업데이트 완료\", loginMember);\r\n    }\r\n\r\n    // 장바구니를 통해 결제 했을 때 해당 장바구니 목록 삭제\r\n    /*\r\n    const deleteItem = async () => {\r\n        \r\n        if(!paymentInfo.items[0].shoppingNo) {\r\n            console.log(\"99999999999999999\")\r\n        } else {\r\n            console.log('444444444444444')\r\n        }\r\n        \r\n        paymentInfo.items.forEach((item) => {\r\n            console.log(\"12312313\",item.shoppingNo)\r\n            if(item.shoppingNo) {// 장바구니에 있는 항목이면\r\n                console.log(item.shoppingNo)\r\n                deleteCartItem(item.shoppingNo);\r\n            } else {\r\n                console.log(\"장바구니에 없는 상품\")\r\n            }\r\n            \r\n        });\r\n    }\r\n    */\r\n    const deleteCartItem = async () => {\r\n        if (!paymentInfo || !paymentInfo.items) {\r\n            console.log(\"paymentInfo나 items가 없습니다.\");\r\n            return;\r\n        }\r\n    \r\n        paymentInfo.items.forEach(async (item) => {\r\n            if (item.shoppingNo) {\r\n                //console.log('shoppingNo', item.shoppingNo);\r\n                await axios.delete('/delete-cart-item', {\r\n                    params: {shoppingNo: item.shoppingNo}\r\n                })\r\n                .then((response) => {\r\n                    console.log(\"해당아이템이 장바구니에서 삭제되었습니다.\")\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"해당아이템이 장바구니에서 삭제중 오류발생\")\r\n                })\r\n            } else {\r\n                console.log(`shoppingNo가 없습니다. item = ${item}`);\r\n            }\r\n        });\r\n    };\r\n\r\n    // 결제정보 입력\r\n    const addPaymentInfo = async () => {\r\n        //console.log(\"너 왜 두번이나 호출되니?????????\")\r\n        //index.js에서 React.StrictMode 삭제 \r\n        //두 번 호출: React.StrictMode에서는 useEffect와 같은 훅이 두 번 호출될 수 있음\r\n        \r\n        // 결제영수증번호 랜덤숫자\r\n        const receiptNumber = Math.floor(Math.random() * 100000000);\r\n        setReceiptNumber(receiptNumber);\r\n        //console.log(\"receiptNumber \",receiptNumber);\r\n\r\n        if (!paymentInfo || !paymentInfo.items) {\r\n            console.log(\"paymentInfo나 items가 없습니다.\");\r\n            return;\r\n        }\r\n\r\n        let usePoint = Number(paymentInfo.itempay_point);\r\n        paymentInfo.items.forEach(async (item) => {\r\n            //console.log(\"item :\", item)\r\n            //console.log(\"paymentInfo\", paymentInfo)\r\n            \r\n            const itemPaymentData = {\r\n                itemNo: item.itemNo,\r\n                memberNo: paymentInfo.memberNo,\r\n                itempayPrice: ( Number(item.itemPayPrice) > usePoint ? Number(item.itemPayPrice) - usePoint : 0 ),\r\n                itempayCount: item.itemCount,\r\n                itempayBuyer: paymentInfo.itempay_buyer,\r\n                itempayEmail: paymentInfo.itempay_email,\r\n                //itempayPointUse: (usePoint > 0 ? \"Y\" : \"N\"),\r\n                itempayPointUse: paymentInfo.itempay_point_use,\r\n                itempayPoint: (usePoint >= Number(item.itemPayPrice) ? Number(item.itemPayPrice) : usePoint ),\r\n                itempayRefund: \"N\",\r\n                itempayReceipt: receiptNumber\r\n            }\r\n\r\n            usePoint = ((usePoint - Number(item.itemPayPrice)) < 0 ? 0 : usePoint - Number(item.itemPayPrice) );\r\n            //console.log(\"!!!!!usePoint!!!!!\",usePoint);\r\n            \r\n            await axios.post('/add-item-payment', itemPaymentData)\r\n            .then((response) => {\r\n                console.log(\"결제정보 DB등록 성공\")\r\n                //console.log(\"!!!itemPaymentData\", itemPaymentData)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"결제정보 DB\")\r\n            })\r\n        })\r\n\r\n    sendEmail(receiptNumber);\r\n\r\n    }\r\n\r\n    // 결제확인 메일 보내기\r\n    // 필요정보 : 결제품목(아이템명(외 O개)), 구매자, 구매자메일, 구매금액, 사용포인트, 구매영수증번호, 구매일자\r\n    const sendEmail = async (receiptNumber) => {\r\n        //console.log(\"11111\",receiptNumber)\r\n        //console.log(\"22222\",paymentInfo)\r\n        //console.log(\"33333\",loginMember)\r\n\r\n        const paymentEmailInfo = {\r\n            itempayName: (paymentInfo.items.length >1 ?\r\n                 paymentInfo.items[0].itemName + \" 외 \" + (paymentInfo.items.length - 1) + \" 건\" \r\n                 : \r\n                 paymentInfo.items[0].itemName),\r\n            itempayBuyer: paymentInfo.itempay_buyer,\r\n            itempayEmail: paymentInfo.itempay_email,\r\n            itempayPrice: paymentInfo.amount,\r\n            itempayPoint: paymentInfo.itempay_point,\r\n            itempayReceipt: receiptNumber,\r\n            itempayDate: new Date().toISOString()\r\n        }\r\n\r\n        await axios.post(\"/send-email-paymentinfo\", paymentEmailInfo)\r\n        .then((response) => {\r\n            console.log(\"결제확인 메일 전송완료\")\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"결제확인 메일 전송실패\")\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"box_section\" style={{ width: \"600px\" }}>\r\n        <img width=\"100px\" src=\"https://static.toss.im/illusts/check-blue-spot-ending-frame.png\" alt=\"Success\" />\r\n        <h2>결제를 완료했어요</h2>\r\n        <div className=\"p-grid typography--p\" style={{ marginTop: \"50px\" }}>\r\n          <div className=\"p-grid-col text--left\">\r\n            <b>구매 영수증</b>\r\n          </div>\r\n          <div className=\"p-grid-col text--right\" id=\"amount\">\r\n            {receiptNumber}\r\n          </div>\r\n        </div>\r\n        <div className=\"p-grid typography--p\" style={{ marginTop: \"10px\" }}>\r\n          <div className=\"p-grid-col text--left\">\r\n            <b>상품</b>\r\n          </div>\r\n          <div className=\"p-grid-col text--right\" id=\"itemName\">\r\n            {(paymentInfo.items.length >1 ?\r\n               paymentInfo.items[0].itemName + \" 외 \" + (paymentInfo.items.length - 1) + \" 건\" \r\n               : \r\n               paymentInfo.items[0].itemName)}\r\n          </div>\r\n        </div>\r\n        <div className=\"p-grid typography--p\" style={{ marginTop: \"10px\" }}>\r\n          <div className=\"p-grid-col text--left\">\r\n            <b>결제금액</b>\r\n          </div>\r\n          <div className=\"p-grid-col text--right\" id=\"amount\">\r\n            {paymentInfo.amount}\r\n          </div>\r\n        </div>\r\n        <div className=\"p-grid typography--p\" style={{ marginTop: \"10px\" }}>\r\n          <div className=\"p-grid-col text--left\">\r\n            <b>사용한 포인트</b>\r\n          </div>\r\n          <div className=\"p-grid-col text--right\" id=\"usingPoint\">\r\n            {paymentInfo.itempay_point}\r\n          </div>\r\n        </div>\r\n        {/*\r\n        <div className=\"box_section\" style={{ width: \"600px\", textAlign: \"left\" }}>\r\n          <b>Response Data :</b>\r\n          <div id=\"response\" style={{ whiteSpace: \"initial\" }}>\r\n            {}\r\n          </div>\r\n        </div>\r\n         */}\r\n        <div className='home-btn'>\r\n            <button><Link to='/'>Home</Link></button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\nexport default ItemPaymentComplete;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}