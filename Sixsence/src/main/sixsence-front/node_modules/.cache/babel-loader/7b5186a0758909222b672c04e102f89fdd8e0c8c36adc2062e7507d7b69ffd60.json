{"ast":null,"code":"import{useNavigate,useLocation,Link}from\"react-router-dom\";import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MemberPwChange=()=>{var _location$state;const location=useLocation();const data=(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.data;// 전달된 상태를 가져옵니다.\nconst[memberPw,setMemberPw]=useState(\"\");const[memberPwCheck,setMemberPwCheck]=useState(\"\");const[change,setChange]=useState(false);const passwordRegex=/^(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])[A-Za-z0-9!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]{10,15}$/;// 비밀번호 입력시 <p> 태그 활용하기 위해서 \nconst isPasswordValid=passwordRegex.test(memberPw)&&passwordRegex.test(memberPwCheck);const arePasswordsMatching=memberPw===memberPwCheck;const isInputFilled=memberPw&&memberPwCheck;// 비밀번호 변경 버튼\nconst handlePasswordChange=()=>{if(!memberPw||!memberPwCheck){alert(\"비밀번호를 입력해 주세요.\");return;}if(memberPw==!memberPwCheck){alert(\"비밀번호가 일치하지 않습니다.\");return;}// location 으로 가져온 data에 data.status 입력하니까 success 나옴 맵을 통해서 (\"memberEmail\",email)을 로케이션 오기전에 생성하고 보내주니까 되네 ..!!\nconsole.log(\"data 정보확인 : \"+data.memberEmail,\"new password 정보확인 : \"+memberPw+\" : \"+memberPwCheck);fetch(\"/change-password\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Accept\":\"application/json\"},body:JSON.stringify({memberEmail:data.memberEmail,memberPw:memberPw,memberPwCheck:memberPwCheck})}).then(response=>{if(!response.ok){// HTTP 응답이 성공적이지 않으면 오류를 발생시킵니다.\nthrow new Error(`HTTP error! Status: ${response.status}`);}return response.json();}).then(data=>{if(data){alert(\"비밀번호가 성공적으로 변경되었습니다.\");setChange(true);}else{alert(\"비밀번호가 일치하지 않습니다.\");}}).catch(error=>{console.error(\"Fetch에서 error 발생 :\",error);alert(\"비밀번호 변경 중 오류가 발생했습니다. \"+error.message);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"grop\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"title-ID\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"})}),!change?/*#__PURE__*/_jsxs(\"div\",{className:\"login-container4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-value\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"input-pwMessage1\",children:\"\\uACE0\\uAC1D\\uB2D8\\uC758 \\uC18C\\uC911\\uD55C \\uC815\\uBCF4\\uB97C \\uBCF4\\uD638\\uD558\\uAE30 \\uC704\\uD558\\uC5EC\"}),/*#__PURE__*/_jsx(\"h6\",{className:\"input-pwMessage1\",children:\"\\uC0C8\\uB85C\\uC6B4 \\uBE44\\uBC00\\uBC88\\uD638\\uB85C \\uBCC0\\uACBD \\uD6C4 \\uC11C\\uBE44\\uC2A4\\uB97C \\uC774\\uC6A9\\uD574 \\uC8FC\\uC138\\uC694.\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input-pwChange\",value:memberPw,onChange:e=>setMemberPw(e.target.value),placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",required:true})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input-pwChange\",value:memberPwCheck,onChange:e=>setMemberPwCheck(e.target.value),placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC7AC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",required:true})}),isInputFilled&&/*#__PURE__*/_jsx(_Fragment,{children:isPasswordValid&&arePasswordsMatching?/*#__PURE__*/_jsx(\"p\",{style:{color:\"green\",margin:\"0\",fontSize:\"13px\"},children:\"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD569\\uB2C8\\uB2E4.\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[!arePasswordsMatching&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\",margin:\"0\",fontSize:\"13px\"},children:\"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"}),!isPasswordValid&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\",margin:\"0\",fontSize:\"13px\"},children:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 10 ~ 15 \\uC790, \\uD2B9\\uC218\\uBB38\\uC790\\uB97C \\uD3EC\\uD568\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\"})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark input-pwChange1\",onClick:handlePasswordChange,children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"login-container4\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"input-pwMessage1\",children:\"\\uACE0\\uAC1D\\uB2D8\\uC758 \\uC18C\\uC911\\uD55C \\uC815\\uBCF4\\uAC00 \\uC218\\uC815\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"h6\",{className:\"input-pwMessage1\",children:\"\\uC11C\\uBE44\\uC2A4 \\uC774\\uC6A9\\uC5D0 \\uAC10\\uC0AC\\uB4DC\\uB9BD\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD68C\\uC6D0\\uC815\\uBCF4\\uAC00 \\uC218\\uC815\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"pw-button\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark\",children:\"\\uBA54\\uC778\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"})}),/*#__PURE__*/_jsx(Link,{to:\"/mypageMain\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-dark\",children:\"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"})})]})]})]});};export default MemberPwChange;","map":{"version":3,"names":["useNavigate","useLocation","Link","React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MemberPwChange","_location$state","location","data","state","memberPw","setMemberPw","memberPwCheck","setMemberPwCheck","change","setChange","passwordRegex","isPasswordValid","test","arePasswordsMatching","isInputFilled","handlePasswordChange","alert","console","log","memberEmail","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","catch","error","message","className","children","type","value","onChange","e","target","placeholder","required","style","color","margin","fontSize","onClick","to"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/login/MemberPwChange.js"],"sourcesContent":["import { useNavigate, useLocation, Link  } from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\n\r\n\r\nconst MemberPwChange = () => {\r\n\r\n    const location = useLocation();\r\n    const data = location.state?.data;  // 전달된 상태를 가져옵니다.\r\n\r\n    const [memberPw, setMemberPw] = useState(\"\");\r\n    const [memberPwCheck, setMemberPwCheck] = useState(\"\");\r\n    const [change, setChange] = useState(false);\r\n    const passwordRegex = /^(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?])[A-Za-z0-9!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]{10,15}$/;\r\n     // 비밀번호 입력시 <p> 태그 활용하기 위해서 \r\n     const isPasswordValid = passwordRegex.test(memberPw) && passwordRegex.test(memberPwCheck);\r\n     const arePasswordsMatching = memberPw === memberPwCheck;\r\n     const isInputFilled = memberPw && memberPwCheck;\r\n    \r\n    \r\n    \r\n     // 비밀번호 변경 버튼\r\n    const handlePasswordChange = () => {\r\n        \r\n        if (!memberPw || !memberPwCheck) {\r\n            alert(\"비밀번호를 입력해 주세요.\");\r\n            return;\r\n        }\r\n        \r\n        if(memberPw ==! memberPwCheck){\r\n            alert(\"비밀번호가 일치하지 않습니다.\");\r\n            return;\r\n        }                             // location 으로 가져온 data에 data.status 입력하니까 success 나옴 맵을 통해서 (\"memberEmail\",email)을 로케이션 오기전에 생성하고 보내주니까 되네 ..!!\r\n        console.log(\"data 정보확인 : \" + data.memberEmail, \"new password 정보확인 : \" + memberPw + \" : \" + memberPwCheck);\r\n        \r\n        fetch(\"/change-password\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                memberEmail: data.memberEmail,\r\n                memberPw: memberPw,\r\n                memberPwCheck : memberPwCheck\r\n            })\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                // HTTP 응답이 성공적이지 않으면 오류를 발생시킵니다.\r\n                throw new Error(`HTTP error! Status: ${response.status}`);\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (data) {\r\n                alert(\"비밀번호가 성공적으로 변경되었습니다.\");\r\n                setChange(true);\r\n            } else {\r\n                alert(\"비밀번호가 일치하지 않습니다.\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Fetch에서 error 발생 :\", error);\r\n            alert(\"비밀번호 변경 중 오류가 발생했습니다. \" + error.message);\r\n        });\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='grop'>\r\n\r\n        <div className='input-value'>\r\n        <h1 className=\"title-ID\">비밀번호 변경</h1>\r\n        </div>\r\n        \r\n        \r\n           \r\n       {!change ? (<div className='login-container4'>\r\n        <div className='input-value'> \r\n        <h6 className=\"input-pwMessage1\">고객님의 소중한 정보를 보호하기 위하여</h6>\r\n        <h6 className=\"input-pwMessage1\">새로운 비밀번호로 변경 후 서비스를 이용해 주세요.</h6>\r\n        </div>\r\n        \r\n       {/*************************************************************************** 비밀번호 ********************************************************************************/ }\r\n       <div>\r\n            <input type=\"password\" className=\"input-pwChange\" value={memberPw} \r\n            onChange={e => setMemberPw(e.target.value)} placeholder=\"비밀번호를 입력해주세요.\" required/>\r\n        </div>\r\n        \r\n        <div >\r\n            <input type=\"password\" className=\"input-pwChange\" value={memberPwCheck} \r\n            onChange={e => setMemberPwCheck(e.target.value)} placeholder=\"비밀번호를 재 입력해주세요.\" required/>\r\n        </div>\r\n         \r\n         {isInputFilled && (\r\n            <>\r\n                {isPasswordValid && arePasswordsMatching ? (\r\n                    <p style={{ color: \"green\", margin: \"0\", fontSize: \"13px\" }}>비밀번호가 일치합니다.</p>\r\n                ) : (\r\n                    <>\r\n                        {!arePasswordsMatching && (\r\n                            <p style={{ color: \"red\", margin: \"0\", fontSize: \"13px\" }}>비밀번호가 일치하지 않습니다.</p>\r\n                        )}\r\n                        {!isPasswordValid && (\r\n                            <p style={{ color: \"red\", margin: \"0\", fontSize: \"13px\" }}>\r\n                                비밀번호는 10 ~ 15 자, 특수문자를 포함해야 합니다.\r\n                            </p>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </>\r\n        )}\r\n        <button className=\"btn btn-dark input-pwChange1\" onClick={handlePasswordChange }>비밀번호 변경</button>\r\n        </div>) : \r\n        (   \r\n            <div className=\"login-container4\">\r\n                <h6 className=\"input-pwMessage1\">고객님의 소중한 정보가 수정되었습니다.</h6>\r\n                <h6 className=\"input-pwMessage1\">서비스 이용에 감사드립니다.</h6>\r\n\r\n                <h2>회원정보가 수정되었습니다.</h2>\r\n                <div className=\"pw-button\">\r\n                <Link to=\"/\"><button className=\"btn btn-dark\">메인으로 돌아가기</button></Link>\r\n                <Link to=\"/mypageMain\"><button className=\"btn btn-dark\">마이페이지 이동</button></Link>\r\n                </div>\r\n            </div>\r\n        )}\r\n                \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemberPwChange;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}