{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import axios from\"axios\";import'../css/AdminAnswer.css';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const AdminAnswer=()=>{const{oboNo}=useParams();const[obo,setObo]=useState(null);const[oboAnswer,setOboAnswer]=useState('');const[isAnswering,setIsAnswering]=useState(false);// 답변 작성 모드 확인\nconst navigate=useNavigate();//특정 1:1문의 리스트 불러오기\nuseEffect(()=>{axios.get(`/api/oboList/${oboNo}`).then(response=>{setObo(response.data);}).catch(e=>alert(\"불러오는데 문제가 발생했습니다.\"));},[oboNo]);//특정문의 답변 보내기\nconst handleAnswerSubmit=()=>{const answerData={...obo,// 기존 문의 데이터\noboAnswer:oboAnswer,// 답변 내용\noboStatus:'y'// 상태를 'y'로 변경\n};axios.post(\"/api/registerAnswer\",answerData).then(response=>{alert(\"답변이 등록되었습니다.\");navigate(\"/AdminObo\");// 답변 등록 후 목록으로 이동\n}).catch(error=>{alert(\"답변 등록이 실패했습니다.\");console.error(\"에러발생\",error);});};//문의 삭제하기\nconst oboDelete=()=>{axios.delete(`/api/obo/${oboNo}`).then(()=>{alert(\"삭제되었습니다\");navigate(\"/AdminObo\");}).catch(error=>{console.error(\"삭제하는데 문제가 발생했습니다.\",error);alert(\"삭제에 실패했습니다.\");});};return/*#__PURE__*/_jsx(\"div\",{className:\"admin-answer-container\",children:obo?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC791\\uC131\\uC790: \",obo.memberName]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC81C\\uBAA9: \",obo.oboTitle]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uB0B4\\uC6A9: \",obo.oboContent]}),isAnswering?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"textarea\",{type:\"text\",value:oboAnswer,onChange:e=>setOboAnswer(e.target.value),placeholder:\"\\uBB38\\uC758\\uB0B4\\uC6A9 \\uB2F5\\uBCC0\\uC791\\uC131\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAnswerSubmit,children:\"\\uB2F5\\uBCC0 \\uC81C\\uCD9C\"}),/*#__PURE__*/_jsx(\"button\",{size:\"large\",onClick:()=>navigate(\"/AdminObo\"),children:\"\\uB3CC\\uC544\\uAC00\\uAE30\"})]}):/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsAnswering(true),children:\"\\uB2F5\\uBCC0\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{onClick:oboDelete,children:\"\\uC0AD\\uC81C\\uD558\\uAE30\"})]}):/*#__PURE__*/_jsx(\"p\",{children:\"\\uB85C\\uB529 \\uC911...\"})});};export default AdminAnswer;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","AdminAnswer","oboNo","obo","setObo","oboAnswer","setOboAnswer","isAnswering","setIsAnswering","navigate","get","then","response","data","catch","e","alert","handleAnswerSubmit","answerData","oboStatus","post","error","console","oboDelete","delete","className","children","memberName","oboTitle","oboContent","type","value","onChange","target","placeholder","onClick","size"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/board/AdminAnswer.js"],"sourcesContent":["import React,{useState, useEffect} from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport '../css/AdminAnswer.css';\r\n\r\nconst AdminAnswer = () => {\r\n   const { oboNo } = useParams();\r\n   const [obo, setObo] = useState(null);\r\n   const [oboAnswer, setOboAnswer] = useState('');\r\n   const [isAnswering, setIsAnswering] = useState(false);  // 답변 작성 모드 확인\r\n   const navigate = useNavigate();\r\n\r\n   //특정 1:1문의 리스트 불러오기\r\n   useEffect(() => {\r\n    axios.get(`/api/oboList/${oboNo}`)\r\n    .then(response => {\r\n      setObo(response.data);\r\n    })\r\n    .catch(e=> alert(\"불러오는데 문제가 발생했습니다.\"));\r\n   } ,[oboNo]);\r\n\r\n   //특정문의 답변 보내기\r\n   const handleAnswerSubmit = () => {\r\n     const answerData = {\r\n       ...obo,  // 기존 문의 데이터\r\n       oboAnswer: oboAnswer,  // 답변 내용\r\n       oboStatus: 'y'  // 상태를 'y'로 변경\r\n     };\r\n\r\n     axios.post(\"/api/registerAnswer\", answerData)\r\n     .then(response => {\r\n       alert(\"답변이 등록되었습니다.\");\r\n       navigate(\"/AdminObo\");  // 답변 등록 후 목록으로 이동\r\n     })\r\n     .catch(error => {\r\n       alert(\"답변 등록이 실패했습니다.\");\r\n       console.error(\"에러발생\", error);\r\n     });\r\n   };\r\n   \r\n  //문의 삭제하기\r\n   const oboDelete = () => {\r\n    axios.delete(`/api/obo/${oboNo}`)\r\n    .then(() => {\r\n      alert(\"삭제되었습니다\");\r\n      navigate(\"/AdminObo\"); \r\n    })\r\n    .catch(error => {\r\n      console.error(\"삭제하는데 문제가 발생했습니다.\", error);\r\n      alert(\"삭제에 실패했습니다.\");\r\n    });\r\n  };\r\n   \r\n   return(\r\n    <div className=\"admin-answer-container\">\r\n    {obo ? (\r\n      <>\r\n        <p>작성자: {obo.memberName}</p>\r\n        <p>제목: {obo.oboTitle}</p>\r\n        <p>내용: {obo.oboContent}</p>\r\n        {isAnswering ? (\r\n          <>\r\n            <textarea\r\n              type=\"text\" \r\n              value={oboAnswer} \r\n              onChange={(e) => setOboAnswer(e.target.value)}\r\n              placeholder=\"문의내용 답변작성\" \r\n            />\r\n            <button  onClick={handleAnswerSubmit}>답변 제출</button>\r\n            <button size=\"large\" onClick={() => navigate(\"/AdminObo\")}>돌아가기</button>\r\n            \r\n          </>\r\n        ) : (\r\n          <button onClick={() => setIsAnswering(true)}>답변하기</button>\r\n          \r\n        )}\r\n        <button onClick={oboDelete}>삭제하기</button>\r\n      </>\r\n    ) : (\r\n      <p>로딩 중...</p>\r\n    )}\r\n  </div>\r\n   )\r\n};\r\n\r\nexport default AdminAnswer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}