{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{Link}from'react-router-dom';import axios from'axios';import'../css/CustomerBoard.css';import BoardNavBar from'./BoardNavBar';import LoginContext from'../login/LoginContext';// 로그인 정보를 가져오는 컨텍스트\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CustomerBoard=()=>{const{loginMember}=useContext(LoginContext);// 로그인 정보 가져오기\nconst[data,setData]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[itemPerPage]=useState(10);const[searchTerm,setSearchTerm]=useState('');//공지사항 게시물 불러오기\nuseEffect(()=>{axios.get(\"/api/board\").then(response=>{console.log(response);setData(response.data);//서버로부터 받은 데이터를 'setData'로 저장\n}).catch(error=>{console.log(\"Error\",error);});},[]);// 페이지 번호를 변경하는 함수\nconst paginate=pageNumber=>setCurrentPage(pageNumber);// 조회수 증가시키는 함수\nconst incrementViewCount=postNo=>{// axios 조회수 증가 요청 보냄\naxios.post(`/api/board/incrementViewCount/${postNo}`).then(response=>{if(response.data.success){setData(prevData=>prevData.map(item=>item.post_no===postNo?{...item,postCount:item.postCount+1}:item));}}).catch(error=>{console.error('에러가발생했습니다.',error);});};// 검색하는 함수\nconst handleSearch=e=>{setSearchTerm(e.target.value);};const filteredItems=data.filter(item=>item.postTitle.toLowerCase().includes(searchTerm.toLowerCase()));// 페이지 네이션 함수\nconst lastItemIndex=currentPage*itemPerPage;const firstItemIndex=lastItemIndex-itemPerPage;const currentItems=filteredItems.slice(firstItemIndex,lastItemIndex);// 관리자 권한 확인 (member_no가 1인 경우)\nconst isAdmin=loginMember&&loginMember.memberNo===1;return/*#__PURE__*/_jsxs(\"div\",{className:\"customer-container mt-4\",children:[/*#__PURE__*/_jsx(BoardNavBar,{}),/*#__PURE__*/_jsx(\"h2\",{className:\"board-gj text-center mb-4\",children:\"\\uACF5\\uC9C0\\uC0AC\\uD56D\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"top-bar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",value:searchTerm,onChange:handleSearch,className:\"search-box\"}),isAdmin?/*#__PURE__*/_jsx(Link,{to:\"/NoticeWrite\",className:\"write-button\",children:\"\\uAE00\\uC4F0\\uAE30\"}):null]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"board-table table-hover\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC870\\uD68C\\uC218\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC791\\uC131\\uC77C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:currentItems.map(item=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.postNo}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:`/noticeView/${item.postNo}`,onClick:()=>incrementViewCount(item.postNo),children:item.postTitle})}),/*#__PURE__*/_jsx(\"td\",{children:item.postCount}),/*#__PURE__*/_jsx(\"td\",{children:item.postCreateDate})]},item.postNo))})]})}),/*#__PURE__*/_jsx(Pagination,{itemPerPage:itemPerPage,totalItems:filteredItems.length,paginate:paginate,currentPage:currentPage})]});};// 페이지네이션 정의\nconst Pagination=_ref=>{let{itemPerPage,totalItems,paginate,currentPage}=_ref;const pageNumbers=[];for(let i=1;i<=Math.ceil(totalItems/itemPerPage);i++){pageNumbers.push(i);}return/*#__PURE__*/_jsx(\"div\",{className:\"board-page\",children:/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsx(\"ul\",{className:\"pagination justify-content-center\",children:pageNumbers.map(number=>/*#__PURE__*/_jsx(\"li\",{className:`page-item ${currentPage===number?'active':''}`,children:/*#__PURE__*/_jsx(\"a\",{onClick:e=>{e.preventDefault();paginate(number);},href:\"!#\",className:\"page-link\",children:number})},number))})})});};export default CustomerBoard;","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","axios","BoardNavBar","LoginContext","jsx","_jsx","jsxs","_jsxs","CustomerBoard","loginMember","data","setData","currentPage","setCurrentPage","itemPerPage","searchTerm","setSearchTerm","get","then","response","console","log","catch","error","paginate","pageNumber","incrementViewCount","postNo","post","success","prevData","map","item","post_no","postCount","handleSearch","e","target","value","filteredItems","filter","postTitle","toLowerCase","includes","lastItemIndex","firstItemIndex","currentItems","slice","isAdmin","memberNo","className","children","type","placeholder","onChange","to","onClick","postCreateDate","Pagination","totalItems","length","_ref","pageNumbers","i","Math","ceil","push","number","preventDefault","href"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/board/CustomerBoard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../css/CustomerBoard.css';\r\nimport BoardNavBar from './BoardNavBar';\r\nimport LoginContext from '../login/LoginContext'; // 로그인 정보를 가져오는 컨텍스트\r\n\r\nconst CustomerBoard = () => {\r\n  const { loginMember } = useContext(LoginContext);  // 로그인 정보 가져오기\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  \r\n//공지사항 게시물 불러오기\r\n  useEffect(() => {\r\n    axios.get(\"/api/board\")\r\n      .then(response => {\r\n        console.log(response);\r\n        setData(response.data); //서버로부터 받은 데이터를 'setData'로 저장\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  }, []);\r\n\r\n  // 페이지 번호를 변경하는 함수\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // 조회수 증가시키는 함수\r\n  const incrementViewCount = (postNo) => {\r\n    // axios 조회수 증가 요청 보냄\r\n    axios.post(`/api/board/incrementViewCount/${postNo}`)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          setData(prevData =>\r\n            prevData.map(item =>\r\n              item.post_no === postNo ? { ...item, postCount: item.postCount + 1 } : item\r\n            )\r\n          );\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('에러가발생했습니다.', error);\r\n      });\r\n  };\r\n\r\n  // 검색하는 함수\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const filteredItems = data.filter(item =>\r\n    item.postTitle.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // 페이지 네이션 함수\r\n  const lastItemIndex = currentPage * itemPerPage;\r\n  const firstItemIndex = lastItemIndex - itemPerPage;\r\n  const currentItems = filteredItems.slice(firstItemIndex, lastItemIndex);\r\n\r\n  // 관리자 권한 확인 (member_no가 1인 경우)\r\n  const isAdmin = loginMember && loginMember.memberNo === 1;\r\n\r\n  return (\r\n    <div className='customer-container mt-4'>\r\n      <BoardNavBar />\r\n      <h2 className='board-gj text-center mb-4'>공지사항</h2>\r\n      <div className='top-bar'>\r\n        <input type='text' placeholder='검색어를 입력하세요'\r\n          value={searchTerm}\r\n          onChange={handleSearch} className='search-box' />\r\n        {isAdmin ? (\r\n          <Link to=\"/NoticeWrite\" className='write-button'>글쓰기</Link>\r\n        ) : null}\r\n      </div>\r\n      <div className='table-responsive'>\r\n        <table className='board-table table-hover'>\r\n          <thead>\r\n            <tr>\r\n              <th>번호</th>\r\n              <th>제목</th>\r\n              <th>조회수</th>\r\n              <th>작성일</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentItems.map(item => (\r\n              <tr key={item.postNo}>\r\n                <td>{item.postNo}</td>\r\n                <td>\r\n                  <Link to={`/noticeView/${item.postNo}`} onClick={() => incrementViewCount(item.postNo)}>\r\n                    {item.postTitle}\r\n                  </Link>\r\n                </td>\r\n                <td>{item.postCount}</td>\r\n                <td>{item.postCreateDate}</td>\r\n              </tr>\r\n\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {/* 페이지네이션 작동기능 */}\r\n      <Pagination\r\n        itemPerPage={itemPerPage}\r\n        totalItems={filteredItems.length}\r\n        paginate={paginate}\r\n        currentPage={currentPage} />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\n// 페이지네이션 정의\r\nconst Pagination = ({ itemPerPage, totalItems, paginate, currentPage }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className='board-page'>\r\n    <nav>\r\n      <ul className=\"pagination justify-content-center\">\r\n        {/*페이지 10페이지 까지만 보여주고 */}\r\n        {/*<< 화살표 이용해서 이전으로 기능 만들기 */}\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className={`page-item ${currentPage === number ? 'active' : ''}`}>\r\n            <a onClick={(e) => { e.preventDefault(); paginate(number); }} href=\"!#\" className='page-link'>\r\n              {number}\r\n             \r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CustomerBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}