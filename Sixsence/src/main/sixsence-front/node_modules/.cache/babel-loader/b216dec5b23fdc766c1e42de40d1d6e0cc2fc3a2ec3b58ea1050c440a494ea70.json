{"ast":null,"code":"import{useContext,useEffect,useRef,useState}from\"react\";import{Link,useLocation,useNavigate,useSearchParams}from\"react-router-dom\";import LoginContext from\"../../login/LoginContext\";import axios from\"axios\";import'../Item.css';// 1. 결제성공(단일품목) -> DB에 입력(상품번호, 회원번호, 결제일자, 결제금액, 상품수량, 구매자, 구매자메일, \n//                         마일리지사용여부, 마일리지사용금액, 환불여부, 결제영수증번호)\n// 2. 결제성공(장바구니를 통한 아이템항목이 여러개)\n// 3. 결제성공(장바구니를 통해 결제 -> 해당 상품 장바구니DB에서 삭제)\n// 4. 결제시 포인트 사용했으면 member의 pooint값 수정\n// 5. 구매자 이메일로 결제영수증보내기\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ItemPaymentSuccessPage(){const{loginMember,setLoginMember}=useContext(LoginContext);const location=useLocation();//const { paymentInfo } = location.state || {};\nconst navigate=useNavigate();const[searchParams]=useSearchParams();const[responseData,setResponseData]=useState(null);const paymentInfo=JSON.parse(sessionStorage.getItem('itemPaymentInfo'));//const isRun = useRef(false);\nconst[receiptNumber,setReceiptNumber]=useState(null);//console.log(\"!!!!!paymentInfo!!!!!!!\",paymentInfo);\n//console.log(\"!!!!!loginMember!!!!!!!\",loginMember);\nuseEffect(()=>{async function confirm(){const requestData={orderId:searchParams.get(\"orderId\"),amount:searchParams.get(\"amount\"),paymentKey:searchParams.get(\"paymentKey\")};try{const response=await fetch(\"/confirm/payment\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(requestData)});const responseText=await response.text();console.log('Raw Response:',responseText);const json=JSON.parse(responseText);if(!response.ok){throw{message:json.message,code:json.code};}return json;}catch(error){console.error(\"Error during payment confirmation:\",error);navigate(`/fail?code=${error.code}&message=${error.message}`);}}},[searchParams]);/*\r\n  useEffect(()=> {\r\n    if(loginMember && (paymentInfo.itempay_point_use ===\"Y\")) {\r\n      memberPointUpdate()\r\n    }\r\n  }, [])\r\n  *//*\r\n  useEffect(() => {\r\n    if (loginMember && paymentInfo && !isRun.current) {\r\n      memberPointUpdate();\r\n      isRun.current = true; // isRun을 true로 설정하여 이후 실행 방지\r\n    }\r\n  }, [loginMember, paymentInfo]);\r\n*/useEffect(()=>{//deleteItem()\ndeleteCartItem();},[]);/*\r\n  useEffect(()=> {\r\n      addPaymentInfo()\r\n  }, [])\r\n  */useEffect(()=>{if(!loginMember){return;}//console.log(sessionStorage.getItem('paymentCompleted'))\nif(sessionStorage.getItem('paymentCompleted')){return;}//console.log(\"123123loginMember\", loginMember)\nmemberPointUpdate();addPaymentInfo();sessionStorage.setItem('paymentCompleted',true);},[[loginMember,paymentInfo]]);/*\r\n  useEffect(()=> {\r\n      setReceiptNumber(Math.floor(Math.random() * 100000000));\r\n  },[])\r\n  */// 포인트업데이트\nconst memberPointUpdate=async()=>{//console.log(\"포인트업데이트 실행\")\nif(!loginMember||!paymentInfo)return;// 등급이 NEW 이면 포인트 적립금 5%, VIP 10%\nlet gradePointRate=loginMember.memberGrade===\"NEW\"?0.05:0.1;console.log(\"gradePointRate\",gradePointRate);//const updatedPoint = Number(loginMember.memberPoint) - Number(paymentInfo.itempay_point)\nlet updatedPoint=0;if(paymentInfo.itempay_point_use===\"Y\"){// 포인트 사용양\nupdatedPoint=Number(loginMember.memberPoint)-Number(paymentInfo.itempay_point);}else{// 포인트 사용안했을 때 적립\nupdatedPoint=Number(loginMember.memberPoint)+Number(paymentInfo.amount)*gradePointRate;}console.log(\"updatedPoint\",updatedPoint);await axios.put(\"/member-point-update\",null,{params:{memberNo:paymentInfo.memberNo,memberPoint:updatedPoint}}).then(response=>{console.log(\"asdfasdfasdfasd\",response);}).catch(error=>{console.log(\"오류발생\");});// 로그인한 아이디의 포인트값 변경\nsetLoginMember({...loginMember,memberPoint:updatedPoint});//console.log(\"포인트 업데이트 완료\", loginMember);\n};// 장바구니를 통해 결제 했을 때 해당 장바구니 목록 삭제\n/*\r\n  const deleteItem = async () => {\r\n      \r\n      if(!paymentInfo.items[0].shoppingNo) {\r\n          console.log(\"99999999999999999\")\r\n      } else {\r\n          console.log('444444444444444')\r\n      }\r\n      \r\n      paymentInfo.items.forEach((item) => {\r\n          console.log(\"12312313\",item.shoppingNo)\r\n          if(item.shoppingNo) {// 장바구니에 있는 항목이면\r\n              console.log(item.shoppingNo)\r\n              deleteCartItem(item.shoppingNo);\r\n          } else {\r\n              console.log(\"장바구니에 없는 상품\")\r\n          }\r\n          \r\n      });\r\n  }\r\n  */const deleteCartItem=async()=>{if(!paymentInfo||!paymentInfo.items){console.log(\"paymentInfo나 items가 없습니다.\");return;}paymentInfo.items.forEach(async item=>{if(item.shoppingNo){//console.log('shoppingNo', item.shoppingNo);\nawait axios.delete('/delete-cart-item',{params:{shoppingNo:item.shoppingNo}}).then(response=>{console.log(\"해당아이템이 장바구니에서 삭제되었습니다.\");}).catch(error=>{console.log(\"해당아이템이 장바구니에서 삭제중 오류발생\");});}else{console.log(`shoppingNo가 없습니다. item = ${item}`);}});};// 결제정보 입력\nconst addPaymentInfo=async()=>{//console.log(\"너 왜 두번이나 호출되니?????????\")\n//index.js에서 React.StrictMode 삭제 \n//두 번 호출: React.StrictMode에서는 useEffect와 같은 훅이 두 번 호출될 수 있음\n// 결제영수증번호 랜덤숫자\nconst receiptNumber=Math.floor(Math.random()*100000000);setReceiptNumber(receiptNumber);//console.log(\"receiptNumber \",receiptNumber);\nif(!paymentInfo||!paymentInfo.items){console.log(\"paymentInfo나 items가 없습니다.\");return;}let usePoint=Number(paymentInfo.itempay_point);paymentInfo.items.forEach(async item=>{//console.log(\"item :\", item)\n//console.log(\"paymentInfo\", paymentInfo)\nconst itemPaymentData={itemNo:item.itemNo,memberNo:paymentInfo.memberNo,itempayPrice:Number(item.itemPayPrice)>usePoint?Number(item.itemPayPrice)-usePoint:0,itempayCount:item.itemCount,itempayBuyer:paymentInfo.itempay_buyer,itempayEmail:paymentInfo.itempay_email,//itempayPointUse: (usePoint > 0 ? \"Y\" : \"N\"),\nitempayPointUse:paymentInfo.itempay_point_use,itempayPoint:usePoint>=Number(item.itemPayPrice)?Number(item.itemPayPrice):usePoint,itempayRefund:\"N\",itempayReceipt:receiptNumber};usePoint=usePoint-Number(item.itemPayPrice)<0?0:usePoint-Number(item.itemPayPrice);//console.log(\"!!!!!usePoint!!!!!\",usePoint);\nawait axios.post('/add-item-payment',itemPaymentData).then(response=>{console.log(\"결제정보 DB등록 성공\");}).catch(error=>{console.log(\"결제정보 DB\");});});sendEmail(receiptNumber);};const sendEmail=async receiptNumber=>{const paymentEmailInfo={itempayName:paymentInfo.items.length>1?paymentInfo.items[0].itemName+\" 외 \"+(paymentInfo.items.length-1)+\" 건\":paymentInfo.items[0].itemName,itempayBuyer:paymentInfo.itempay_buyer,itempayEmail:paymentInfo.itempay_email,itempayPrice:paymentInfo.amount,itempayPoint:paymentInfo.itempay_point,itempayReceipt:receiptNumber,itempayDate:new Date().toISOString()};await axios.post(\"/send-email-paymentinfo\",paymentEmailInfo).then(response=>{console.log(\"결제확인 메일 전송완료\");}).catch(error=>{console.log(\"결제확인 메일 전송실패\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"box_section\",style:{width:\"600px\"},children:[/*#__PURE__*/_jsx(\"img\",{width:\"100px\",src:\"https://static.toss.im/illusts/check-blue-spot-ending-frame.png\",alt:\"Success\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\uACB0\\uC81C\\uB97C \\uC644\\uB8CC\\uD588\\uC5B4\\uC694\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"50px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uAD6C\\uB9E4 \\uC601\\uC218\\uC99D\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"amount\",children:receiptNumber})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uC0C1\\uD488\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"itemName\",children:paymentInfo.items.length>1?paymentInfo.items[0].itemName+\" 외 \"+(paymentInfo.items.length-1)+\" 건\":paymentInfo.items[0].itemName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uACB0\\uC81C\\uAE08\\uC561\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"amount\",children:`${Number(searchParams.get(\"amount\")).toLocaleString()}원`})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-grid typography--p\",style:{marginTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--left\",children:/*#__PURE__*/_jsx(\"b\",{children:\"\\uC0AC\\uC6A9\\uD55C \\uD3EC\\uC778\\uD2B8\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-grid-col text--right\",id:\"usingPoint\",children:paymentInfo.itempay_point})]}),/*#__PURE__*/_jsx(\"div\",{className:\"home-btn\",children:/*#__PURE__*/_jsx(\"button\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"})})})]});}export default ItemPaymentSuccessPage;","map":{"version":3,"names":["useContext","useEffect","useRef","useState","Link","useLocation","useNavigate","useSearchParams","LoginContext","axios","jsx","_jsx","jsxs","_jsxs","ItemPaymentSuccessPage","loginMember","setLoginMember","location","navigate","searchParams","responseData","setResponseData","paymentInfo","JSON","parse","sessionStorage","getItem","receiptNumber","setReceiptNumber","confirm","requestData","orderId","get","amount","paymentKey","response","fetch","method","headers","body","stringify","responseText","text","console","log","json","ok","message","code","error","deleteCartItem","memberPointUpdate","addPaymentInfo","setItem","gradePointRate","memberGrade","updatedPoint","itempay_point_use","Number","memberPoint","itempay_point","put","params","memberNo","then","catch","items","forEach","item","shoppingNo","delete","Math","floor","random","usePoint","itemPaymentData","itemNo","itempayPrice","itemPayPrice","itempayCount","itemCount","itempayBuyer","itempay_buyer","itempayEmail","itempay_email","itempayPointUse","itempayPoint","itempayRefund","itempayReceipt","post","sendEmail","paymentEmailInfo","itempayName","length","itemName","itempayDate","Date","toISOString","className","style","width","children","src","alt","marginTop","id","toLocaleString","to"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/store/payment/ItemPaymentSuccessPage.js"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport LoginContext from \"../../login/LoginContext\";\r\nimport axios from \"axios\";\r\nimport '../Item.css';\r\n// 1. 결제성공(단일품목) -> DB에 입력(상품번호, 회원번호, 결제일자, 결제금액, 상품수량, 구매자, 구매자메일, \r\n//                         마일리지사용여부, 마일리지사용금액, 환불여부, 결제영수증번호)\r\n// 2. 결제성공(장바구니를 통한 아이템항목이 여러개)\r\n// 3. 결제성공(장바구니를 통해 결제 -> 해당 상품 장바구니DB에서 삭제)\r\n// 4. 결제시 포인트 사용했으면 member의 pooint값 수정\r\n// 5. 구매자 이메일로 결제영수증보내기\r\n\r\nfunction ItemPaymentSuccessPage() {\r\n  const { loginMember, setLoginMember } = useContext(LoginContext);\r\n  const location = useLocation();\r\n  //const { paymentInfo } = location.state || {};\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const [responseData, setResponseData] = useState(null);\r\n  const paymentInfo = JSON.parse(sessionStorage.getItem('itemPaymentInfo'));\r\n  //const isRun = useRef(false);\r\n  const [receiptNumber, setReceiptNumber] = useState(null);\r\n  \r\n  \r\n\r\n  //console.log(\"!!!!!paymentInfo!!!!!!!\",paymentInfo);\r\n  //console.log(\"!!!!!loginMember!!!!!!!\",loginMember);\r\n\r\n  useEffect(() => {\r\n    async function confirm() {\r\n      const requestData = {\r\n        orderId: searchParams.get(\"orderId\"),\r\n        amount: searchParams.get(\"amount\"),\r\n        paymentKey: searchParams.get(\"paymentKey\"),\r\n      };\r\n    \r\n      try {\r\n        const response = await fetch(\"/confirm/payment\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        });\r\n    \r\n        const responseText = await response.text();\r\n        console.log('Raw Response:', responseText); \r\n    \r\n        const json = JSON.parse(responseText);\r\n        if (!response.ok) {\r\n          throw { message: json.message, code: json.code };\r\n        }\r\n    \r\n        return json;\r\n      } catch (error) {\r\n        console.error(\"Error during payment confirmation:\", error);\r\n        navigate(`/fail?code=${error.code}&message=${error.message}`);\r\n      }\r\n    }\r\n    \r\n  }, [searchParams]);\r\n\r\n  /*\r\n  useEffect(()=> {\r\n    if(loginMember && (paymentInfo.itempay_point_use ===\"Y\")) {\r\n      memberPointUpdate()\r\n    }\r\n  }, [])\r\n  */\r\n /*\r\n  useEffect(() => {\r\n    if (loginMember && paymentInfo && !isRun.current) {\r\n      memberPointUpdate();\r\n      isRun.current = true; // isRun을 true로 설정하여 이후 실행 방지\r\n    }\r\n  }, [loginMember, paymentInfo]);\r\n*/\r\n  useEffect(()=> {\r\n      //deleteItem()\r\n      deleteCartItem()\r\n  }, [])\r\n\r\n  /*\r\n  useEffect(()=> {\r\n      addPaymentInfo()\r\n  }, [])\r\n  */\r\n  useEffect(()=> {\r\n    if(!loginMember) {\r\n      return\r\n    }\r\n\r\n    //console.log(sessionStorage.getItem('paymentCompleted'))\r\n    if (sessionStorage.getItem('paymentCompleted')) {\r\n        return\r\n    }\r\n\r\n    //console.log(\"123123loginMember\", loginMember)\r\n    memberPointUpdate();\r\n\r\n    addPaymentInfo();\r\n    sessionStorage.setItem('paymentCompleted', true);\r\n  }, [[loginMember, paymentInfo]])\r\n  /*\r\n  useEffect(()=> {\r\n      setReceiptNumber(Math.floor(Math.random() * 100000000));\r\n  },[])\r\n  */\r\n  // 포인트업데이트\r\n  const memberPointUpdate = async () => {\r\n    //console.log(\"포인트업데이트 실행\")\r\n      if (!loginMember || !paymentInfo) return;\r\n\r\n      // 등급이 NEW 이면 포인트 적립금 5%, VIP 10%\r\n      let gradePointRate =  (loginMember.memberGrade === \"NEW\" ? 0.05 : 0.1)\r\n      console.log(\"gradePointRate\", gradePointRate);\r\n\r\n      //const updatedPoint = Number(loginMember.memberPoint) - Number(paymentInfo.itempay_point)\r\n      \r\n      let updatedPoint = 0;\r\n      if(paymentInfo.itempay_point_use ===\"Y\") { // 포인트 사용양\r\n          updatedPoint = Number(loginMember.memberPoint) - Number(paymentInfo.itempay_point)\r\n      } else { // 포인트 사용안했을 때 적립\r\n          updatedPoint = Number(loginMember.memberPoint) + (Number(paymentInfo.amount) * gradePointRate)\r\n      }\r\n      console.log(\"updatedPoint\", updatedPoint);\r\n\r\n      await axios.put(\"/member-point-update\",null, {\r\n          params: {\r\n              memberNo: paymentInfo.memberNo,\r\n              memberPoint: updatedPoint\r\n          }\r\n      })\r\n      .then((response) => {\r\n          console.log(\"asdfasdfasdfasd\",response);\r\n      })\r\n      .catch((error) => {\r\n          console.log(\"오류발생\")\r\n      })\r\n      // 로그인한 아이디의 포인트값 변경\r\n      setLoginMember({\r\n          ...loginMember,\r\n          memberPoint: updatedPoint,\r\n      });\r\n      //console.log(\"포인트 업데이트 완료\", loginMember);\r\n  }\r\n\r\n  // 장바구니를 통해 결제 했을 때 해당 장바구니 목록 삭제\r\n  /*\r\n  const deleteItem = async () => {\r\n      \r\n      if(!paymentInfo.items[0].shoppingNo) {\r\n          console.log(\"99999999999999999\")\r\n      } else {\r\n          console.log('444444444444444')\r\n      }\r\n      \r\n      paymentInfo.items.forEach((item) => {\r\n          console.log(\"12312313\",item.shoppingNo)\r\n          if(item.shoppingNo) {// 장바구니에 있는 항목이면\r\n              console.log(item.shoppingNo)\r\n              deleteCartItem(item.shoppingNo);\r\n          } else {\r\n              console.log(\"장바구니에 없는 상품\")\r\n          }\r\n          \r\n      });\r\n  }\r\n  */\r\n  const deleteCartItem = async () => {\r\n      if (!paymentInfo || !paymentInfo.items) {\r\n          console.log(\"paymentInfo나 items가 없습니다.\");\r\n          return;\r\n      }\r\n\r\n      paymentInfo.items.forEach(async (item) => {\r\n          if (item.shoppingNo) {\r\n              //console.log('shoppingNo', item.shoppingNo);\r\n              await axios.delete('/delete-cart-item', {\r\n                  params: {shoppingNo: item.shoppingNo}\r\n              })\r\n              .then((response) => {\r\n                  console.log(\"해당아이템이 장바구니에서 삭제되었습니다.\")\r\n              })\r\n              .catch((error) => {\r\n                  console.log(\"해당아이템이 장바구니에서 삭제중 오류발생\")\r\n              })\r\n          } else {\r\n              console.log(`shoppingNo가 없습니다. item = ${item}`);\r\n          }\r\n      });\r\n  };\r\n\r\n  // 결제정보 입력\r\n  const addPaymentInfo = async () => {\r\n      //console.log(\"너 왜 두번이나 호출되니?????????\")\r\n      //index.js에서 React.StrictMode 삭제 \r\n      //두 번 호출: React.StrictMode에서는 useEffect와 같은 훅이 두 번 호출될 수 있음\r\n      \r\n      // 결제영수증번호 랜덤숫자\r\n      const receiptNumber = Math.floor(Math.random() * 100000000);\r\n      setReceiptNumber(receiptNumber);\r\n      //console.log(\"receiptNumber \",receiptNumber);\r\n\r\n      if (!paymentInfo || !paymentInfo.items) {\r\n          console.log(\"paymentInfo나 items가 없습니다.\");\r\n          return;\r\n      }\r\n\r\n      let usePoint = Number(paymentInfo.itempay_point);\r\n      paymentInfo.items.forEach(async (item) => {\r\n          //console.log(\"item :\", item)\r\n          //console.log(\"paymentInfo\", paymentInfo)\r\n          \r\n          const itemPaymentData = {\r\n              itemNo: item.itemNo,\r\n              memberNo: paymentInfo.memberNo,\r\n              itempayPrice: ( Number(item.itemPayPrice) > usePoint ? Number(item.itemPayPrice) - usePoint : 0 ),\r\n              itempayCount: item.itemCount,\r\n              itempayBuyer: paymentInfo.itempay_buyer,\r\n              itempayEmail: paymentInfo.itempay_email,\r\n              //itempayPointUse: (usePoint > 0 ? \"Y\" : \"N\"),\r\n              itempayPointUse: paymentInfo.itempay_point_use,\r\n              itempayPoint: (usePoint >= Number(item.itemPayPrice) ? Number(item.itemPayPrice) : usePoint ),\r\n              itempayRefund: \"N\",\r\n              itempayReceipt: receiptNumber\r\n          }\r\n\r\n          usePoint = ((usePoint - Number(item.itemPayPrice)) < 0 ? 0 : usePoint - Number(item.itemPayPrice) );\r\n          //console.log(\"!!!!!usePoint!!!!!\",usePoint);\r\n          \r\n          await axios.post('/add-item-payment', itemPaymentData)\r\n          .then((response) => {\r\n              console.log(\"결제정보 DB등록 성공\")\r\n          })\r\n          .catch((error) => {\r\n              console.log(\"결제정보 DB\")\r\n          })\r\n      })\r\n\r\n      sendEmail(receiptNumber);\r\n  }\r\n\r\n  const sendEmail = async (receiptNumber) => {\r\n\r\n    const paymentEmailInfo = {\r\n        itempayName: (paymentInfo.items.length >1 ?\r\n             paymentInfo.items[0].itemName + \" 외 \" + (paymentInfo.items.length - 1) + \" 건\" \r\n             : \r\n             paymentInfo.items[0].itemName),\r\n        itempayBuyer: paymentInfo.itempay_buyer,\r\n        itempayEmail: paymentInfo.itempay_email,\r\n        itempayPrice: paymentInfo.amount,\r\n        itempayPoint: paymentInfo.itempay_point,\r\n        itempayReceipt: receiptNumber,\r\n        itempayDate: new Date().toISOString()\r\n    }\r\n\r\n    await axios.post(\"/send-email-paymentinfo\", paymentEmailInfo)\r\n    .then((response) => {\r\n        console.log(\"결제확인 메일 전송완료\")\r\n    })\r\n    .catch((error) => {\r\n        console.log(\"결제확인 메일 전송실패\")\r\n    })\r\n}\r\n\r\n  return (\r\n    <div className=\"box_section\" style={{ width: \"600px\" }}>\r\n      <img width=\"100px\" src=\"https://static.toss.im/illusts/check-blue-spot-ending-frame.png\" alt=\"Success\" />\r\n      <h2>결제를 완료했어요</h2>\r\n      <div className=\"p-grid typography--p\" style={{ marginTop: \"50px\" }}>\r\n        <div className=\"p-grid-col text--left\">\r\n          <b>구매 영수증</b>\r\n        </div>\r\n        <div className=\"p-grid-col text--right\" id=\"amount\">\r\n          {receiptNumber}\r\n        </div>\r\n      </div>\r\n      <div className=\"p-grid typography--p\" style={{ marginTop: \"10px\" }}>\r\n        <div className=\"p-grid-col text--left\">\r\n          <b>상품</b>\r\n        </div>\r\n        <div className=\"p-grid-col text--right\" id=\"itemName\">\r\n          {(paymentInfo.items.length >1 ?\r\n             paymentInfo.items[0].itemName + \" 외 \" + (paymentInfo.items.length - 1) + \" 건\" \r\n             : \r\n             paymentInfo.items[0].itemName)}\r\n        </div>\r\n      </div>\r\n      <div className=\"p-grid typography--p\" style={{ marginTop: \"10px\" }}>\r\n        <div className=\"p-grid-col text--left\">\r\n          <b>결제금액</b>\r\n        </div>\r\n        <div className=\"p-grid-col text--right\" id=\"amount\">\r\n          {`${Number(searchParams.get(\"amount\")).toLocaleString()}원`}\r\n        </div>\r\n      </div>\r\n      <div className=\"p-grid typography--p\" style={{ marginTop: \"10px\" }}>\r\n        <div className=\"p-grid-col text--left\">\r\n          <b>사용한 포인트</b>\r\n        </div>\r\n        <div className=\"p-grid-col text--right\" id=\"usingPoint\">\r\n          {paymentInfo.itempay_point}\r\n        </div>\r\n      </div>\r\n      {/* \r\n      <div className=\"box_section\" style={{ width: \"600px\", textAlign: \"left\" }}>\r\n        <b>Response Data :</b>\r\n        <div id=\"response\" style={{ whiteSpace: \"initial\" }}>\r\n          {responseData && <pre>{JSON.stringify(responseData, null, 4)}</pre>}\r\n        </div>\r\n      </div>\r\n      */}\r\n      <div className='home-btn'>\r\n          <button><Link to='/'>Home</Link></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemPaymentSuccessPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}