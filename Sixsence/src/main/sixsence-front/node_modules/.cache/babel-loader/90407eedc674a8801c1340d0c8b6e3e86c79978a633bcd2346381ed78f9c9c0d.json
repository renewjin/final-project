{"ast":null,"code":"import React,{useState,useEffect,useContext}from\"react\";import{useNavigate,useParams}from\"react-router-dom\";import axios from\"axios\";import LoginContext from\"../login/LoginContext\";import\"../css/NoticeView.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NoticeView=()=>{const{loginMember}=useContext(LoginContext);// 로그인 정보 가져오기\nconst{postNo}=useParams();const[post,setPost]=useState(null);// 게시글 데이터를 저장할 상태 변수\nconst navigate=useNavigate();// 페이지 이동을 위한 navigate 함수\nconst[editPost,setEditPost]=useState({postTitle:\"\",postContent:\"\",postCreateDate:\"\",postCount:\"\"});// 수정하기 버튼을 눌렀는지 안 눌렀는지 체크하는 상태 변수\nconst[isEditing,setIsEditing]=useState(false);useEffect(()=>{axios.get(`/api/board/${postNo}`).then(response=>{setPost(response.data);}).catch(error=>{console.log(\"에러가발생했어요\",error);});},[postNo]);if(!post){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Loading...\",/*#__PURE__*/_jsx(\"img\",{src:\"/board_image/b_image.jpg\"})]});}// 관리자 권한 확인 \nconst isAdmin=loginMember&&loginMember.memberNo===1;// 관리자가 수정한 내용을 서버에 보내기\nconst handleSaveChanges=()=>{axios.put(`/api/boardEdit/${postNo}`,editPost).then(response=>{setPost(response.data);// DB에 저장된 내용을 다시 가져오기\nsetIsEditing(false);// 수정 모드 종료\nnavigate('/CustomerBoard');// 수정 완료 후 다시 NoticeView로 이동 (추가된 부분)\n}).catch(error=>{console.error(\"수정하는 데 문제가 발생했습니다.\",error);});};// 공지사항 삭제하기\nconst noticeDelete=()=>{axios.delete(`/api/post/${postNo}`).then(()=>{alert(\"삭제가 완료되었습니다.\");navigate(\"/CustomerBoard\");}).catch(error=>{console.error(\"삭제했는데 문제가 발생했습니다.\",error);alert(\"삭제에 실패했습니다.\");});};return/*#__PURE__*/_jsx(\"div\",{className:\"post-container mt-4\",children:isEditing?/*#__PURE__*/// 수정 모드일 때 표시할 폼\n_jsxs(\"div\",{className:\"post-edit-container\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC81C\\uBAA9:\",post.postTitle]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uB0B4\\uC6A9:\",post.postContent]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"postTitle\",value:editPost.postTitle,onChange:e=>setEditPost({...editPost,postTitle:e.target.value}),placeholder:\"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"postContent\",value:editPost.postContent,onChange:e=>setEditPost({...editPost,postContent:e.target.value}),placeholder:\"\\uACF5\\uC9C0\\uC0AC\\uD56D\\uB0B4\\uC6A9\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveChanges,children:\"\\uC218\\uC815\\uC644\\uB8CC\"})]}):/*#__PURE__*/// 수정 모드가 아닐 때 표시할 내용\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:post.postTitle}),/*#__PURE__*/_jsx(\"p\",{children:post.postContent}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC791\\uC131\\uC77C:\"}),\" \",post.postCreateDate]}),/*#__PURE__*/_jsxs(\"p\",{className:\"post-count\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC870\\uD68C\\uC218:\"}),\" \",post.postCount]}),/*#__PURE__*/_jsx(\"button\",{size:\"large\",onClick:()=>navigate(\"/CustomerBoard\"),children:\"\\uB3CC\\uC544\\uAC00\\uAE30\"}),isAdmin&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsEditing(true),children:\"\\uC218\\uC815\\uD558\\uAE30\"}),isAdmin&&/*#__PURE__*/_jsx(\"button\",{onClick:noticeDelete,children:\"\\uC0AD\\uC81C\\uD558\\uAE30\"})]})});};export default NoticeView;","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","useParams","axios","LoginContext","jsx","_jsx","jsxs","_jsxs","NoticeView","loginMember","postNo","post","setPost","navigate","editPost","setEditPost","postTitle","postContent","postCreateDate","postCount","isEditing","setIsEditing","get","then","response","data","catch","error","console","log","children","src","isAdmin","memberNo","handleSaveChanges","put","noticeDelete","delete","alert","className","type","name","value","onChange","e","target","placeholder","onClick","size"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/board/NoticeView.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport LoginContext from \"../login/LoginContext\";\r\nimport \"../css/NoticeView.css\";\r\n\r\nconst NoticeView = () => {\r\n  const { loginMember } = useContext(LoginContext);  // 로그인 정보 가져오기\r\n  const { postNo } = useParams(); \r\n  const [post, setPost] = useState(null); // 게시글 데이터를 저장할 상태 변수\r\n  const navigate = useNavigate(); // 페이지 이동을 위한 navigate 함수\r\n  const [editPost, setEditPost] = useState({\r\n    postTitle:\"\",\r\n    postContent:\"\",\r\n    postCreateDate:\"\",\r\n    postCount:\"\"\r\n  });\r\n\r\n  // 수정하기 버튼을 눌렀는지 안 눌렀는지 체크하는 상태 변수\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/board/${postNo}`)\r\n      .then(response => {\r\n        setPost(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"에러가발생했어요\", error);\r\n      });\r\n  }, [postNo]);\r\n\r\n  if (!post) {\r\n    return <div>Loading...<img src=\"/board_image/b_image.jpg\"/></div>;\r\n }\r\n\r\n  // 관리자 권한 확인 \r\n  const isAdmin = loginMember && loginMember.memberNo === 1;\r\n\r\n  // 관리자가 수정한 내용을 서버에 보내기\r\n  const handleSaveChanges = () => {\r\n    axios.put(`/api/boardEdit/${postNo}`, editPost)\r\n      .then(response => {\r\n        setPost(response.data); // DB에 저장된 내용을 다시 가져오기\r\n        setIsEditing(false); // 수정 모드 종료\r\n        navigate('/CustomerBoard'); // 수정 완료 후 다시 NoticeView로 이동 (추가된 부분)\r\n      })\r\n      .catch(error => {\r\n        console.error(\"수정하는 데 문제가 발생했습니다.\", error);\r\n      });\r\n  };\r\n\r\n  // 공지사항 삭제하기\r\n   const noticeDelete = () => {\r\n    axios.delete(`/api/post/${postNo}`)\r\n    .then(() => {\r\n      alert(\"삭제가 완료되었습니다.\");\r\n      navigate(\"/CustomerBoard\")\r\n    })\r\n    .catch(error => {\r\n      console.error(\"삭제했는데 문제가 발생했습니다.\", error);\r\n      alert(\"삭제에 실패했습니다.\");\r\n    });\r\n   };\r\n\r\n  return (\r\n    <div className=\"post-container mt-4\">\r\n      {isEditing ? (\r\n        // 수정 모드일 때 표시할 폼\r\n        <div className=\"post-edit-container\">\r\n          <p>제목:{post.postTitle}</p>\r\n          <p>내용:{post.postContent}</p>\r\n          <input \r\n            type=\"text\" \r\n            name=\"postTitle\" \r\n            value={editPost.postTitle}\r\n            onChange={(e) => setEditPost({...editPost, postTitle: e.target.value})} \r\n            placeholder=\"공지사항제목\"\r\n          />\r\n          <textarea \r\n            name=\"postContent\" \r\n            value={editPost.postContent}\r\n            onChange={(e) => setEditPost({...editPost, postContent: e.target.value})} \r\n            placeholder=\"공지사항내용\"\r\n          />\r\n          <button onClick={handleSaveChanges}>수정완료</button>\r\n        </div>\r\n ) : (\r\n  // 수정 모드가 아닐 때 표시할 내용\r\n  <div>\r\n    <h2>{post.postTitle}</h2>\r\n    <p>{post.postContent}</p>\r\n    <p><strong>작성일:</strong> {post.postCreateDate}</p>\r\n    <p className=\"post-count\"><strong>조회수:</strong> {post.postCount}</p>\r\n    <button size=\"large\" onClick={() => navigate(\"/CustomerBoard\")}>돌아가기</button>\r\n    {/* 관리자일 경우 수정하기 버튼 표시 */}\r\n    {isAdmin && (\r\n      <button onClick={() => setIsEditing(true)}>수정하기</button>\r\n    )}\r\n    {isAdmin && (\r\n      <button onClick={noticeDelete}>삭제하기</button>\r\n    )}\r\n  </div>\r\n)}\r\n</div>\r\n);\r\n};\r\n\r\nexport default NoticeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}