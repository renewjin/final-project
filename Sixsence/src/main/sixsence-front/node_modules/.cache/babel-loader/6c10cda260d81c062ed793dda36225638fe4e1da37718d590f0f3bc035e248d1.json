{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import'bootstrap/dist/css/bootstrap.min.css';import{useNavigate,Link}from'react-router-dom';// useNavigate 훅 import\nimport LoginContext from'./LoginContext';import NaverApi from'./NaverApi';import GoogleLogin from'./GoogleLogin';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Login=()=>{const{loginMember,setLoginMember}=useContext(LoginContext);const[memberId,setMemberId]=useState(\"\");const[memberPw,setMemberPw]=useState(\"\");const[saveId,setSaveId]=useState(false);// 아이디 저장 상태 기본값 : false 이벤트 발생시 값이 : true\nconst navigate=useNavigate();// useNavigate 훅 호출\n// 페이지 로드 시 저장된 아이디를 불러오기\nuseEffect(()=>{// 로그아웃이후 오거나 로그인을 클릭해서 오거나 최초실행\n// 아이디 저장(체크박스)을 해제하고 들어왔다면 localStorage.removeItem('savedId');\nconst savedId=localStorage.getItem('savedId');// localStorage에 saveId 넣어주고 \nif(savedId){//-> saveId 가 전에 입력한 아이디값 가지고 있음\nsetMemberId(savedId);// 인풋에 saveId가 들어가있으면 바로 입력된 상태로 보여진다.\nsetSaveId(true);}},[]);// 로그인 버튼\nconst loginButton=()=>{fetch(\"/member-Login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Accept\":\"application/json\"},body:JSON.stringify({memberId,memberPw})}).then(response=>{if(!response.ok){throw new Error('response was not ok');}return response.json();}).then(data=>{if(data.loginMember){setLoginMember(data.loginMember);console.log('setLoginMember : ',data.loginMember);localStorage.setItem('loginMember',JSON.stringify(data.loginMember));if(saveId){// 컨트롤러 들렀다 반환 받을 때 체크박스를 선택하여 save가 true라면 \nlocalStorage.setItem('savedId',memberId);// localStorage 에 key \"saveId\"  , value memberId 로 값을 넣어주겠다.\n}else{localStorage.removeItem('savedId');// 체크박스 해제상태라면 saveId(체크박스) 의 상태를 초기화하겠다. false가 되겠지\n}navigate('/');//login redirect\n}else{alert('로그인에 실패하셨습니다.');}}).catch(error=>{console.error('Fetch error:',error);alert('로그인 요청 중 오류가 발생했습니다.');});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title-ID\",children:\"\\uC544\\uC774\\uB514\\uC640 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"login-message\",children:\"\\uB85C\\uADF8\\uC778 \\uD558\\uC2DC\\uBA74 \\uB2E4\\uC591\\uD55C \\uD61C\\uD0DD\\uC744 \\uBC1B\\uC73C\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"}),!loginMember&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:memberId,onChange:e=>setMemberId(e.target.value),placeholder:\"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:memberPw,onChange:e=>setMemberPw(e.target.value),placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-save\",children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:saveId// 기본값 value 처럼 보면 된다.\n,onChange:e=>setSaveId(e.target.checked)// 행동이 일어나면 setSaveId 값 넣어줌\n}),/*#__PURE__*/_jsx(\"label\",{children:\"\\uC544\\uC774\\uB514 \\uC800\\uC7A5\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:/*#__PURE__*/_jsx(\"button\",{onClick:loginButton,className:\"btn btn-dark\",children:\"\\uB85C\\uADF8\\uC778\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:/*#__PURE__*/_jsx(NaverApi,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-value\",children:/*#__PURE__*/_jsx(GoogleLogin,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"List\",children:[/*#__PURE__*/_jsx(Link,{to:\"/memberIdFind\",children:\"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"p\",{children:\" | \"}),/*#__PURE__*/_jsx(Link,{to:\"/passwordFind\",children:\" \\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"p\",{children:\" | \"}),/*#__PURE__*/_jsx(Link,{to:\"/registerCheck\",children:\" \\uD68C\\uC6D0\\uAC00\\uC785\"})]})]})]})})]});};export default Login;","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","Link","LoginContext","NaverApi","GoogleLogin","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Login","loginMember","setLoginMember","memberId","setMemberId","memberPw","setMemberPw","saveId","setSaveId","navigate","savedId","localStorage","getItem","loginButton","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","console","log","setItem","removeItem","alert","catch","error","children","className","type","value","onChange","e","target","placeholder","checked","onClick","to"],"sources":["C:/Users/user1/Desktop/sixsence/Sixsence/src/main/sixsence-front/src/login/MemberLogin.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useNavigate, Link } from 'react-router-dom'; // useNavigate 훅 import\r\nimport LoginContext from './LoginContext';\r\nimport NaverApi from './NaverApi';\r\nimport GoogleLogin from './GoogleLogin';\r\n\r\nconst Login = () => {\r\n  const { loginMember, setLoginMember } = useContext(LoginContext);\r\n  const [memberId, setMemberId] = useState(\"\");\r\n  const [memberPw, setMemberPw] = useState(\"\");\r\n  const [saveId, setSaveId] = useState(false); // 아이디 저장 상태 기본값 : false 이벤트 발생시 값이 : true\r\n  const navigate = useNavigate(); // useNavigate 훅 호출\r\n  \r\n  // 페이지 로드 시 저장된 아이디를 불러오기\r\n  useEffect(() => { // 로그아웃이후 오거나 로그인을 클릭해서 오거나 최초실행\r\n                // 아이디 저장(체크박스)을 해제하고 들어왔다면 localStorage.removeItem('savedId');\r\n    const savedId = localStorage.getItem('savedId'); // localStorage에 saveId 넣어주고 \r\n    if (savedId) {  //-> saveId 가 전에 입력한 아이디값 가지고 있음\r\n      setMemberId(savedId); // 인풋에 saveId가 들어가있으면 바로 입력된 상태로 보여진다.\r\n      setSaveId(true);\r\n    }\r\n  }, []);\r\n\r\n  // 로그인 버튼\r\n  const loginButton = () => {\r\n    \r\n    fetch(\"/member-Login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ memberId, memberPw })\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('response was not ok');\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      if(data.loginMember) {\r\n        setLoginMember(data.loginMember);\r\n        console.log('setLoginMember : ' , data.loginMember);\r\n        localStorage.setItem('loginMember', JSON.stringify(data.loginMember));\r\n        \r\n        if (saveId) { // 컨트롤러 들렀다 반환 받을 때 체크박스를 선택하여 save가 true라면 \r\n          localStorage.setItem('savedId', memberId); // localStorage 에 key \"saveId\"  , value memberId 로 값을 넣어주겠다.\r\n        } else {\r\n          localStorage.removeItem('savedId'); // 체크박스 해제상태라면 saveId(체크박스) 의 상태를 초기화하겠다. false가 되겠지\r\n        }\r\n        navigate('/'); //login redirect\r\n\r\n      } else {\r\n        alert('로그인에 실패하셨습니다.');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Fetch error:', error);\r\n      alert('로그인 요청 중 오류가 발생했습니다.');\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1 className=\"title-ID\">아이디와 비밀번호를 입력해주세요.</h1>\r\n\r\n    \r\n\r\n    <div className=\"login-container\">\r\n      {/* loginMember 값이 null 비로그인 View */}\r\n      <div className='login-body'>\r\n      <h5 className='login-message'>로그인 하시면 다양한 혜택을 받으실 수 있습니다.</h5>\r\n      {!loginMember && (\r\n        <>\r\n          \r\n          <div className=\"input-value\">\r\n            <input\r\n              type=\"text\"\r\n              value={memberId}\r\n              onChange={(e) => setMemberId(e.target.value)}\r\n              placeholder=\"아이디를 입력해주세요.\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-value\">\r\n            <input\r\n              type=\"password\"\r\n              value={memberPw}\r\n              onChange={(e) => setMemberPw(e.target.value)}\r\n              placeholder=\"비밀번호를 입력해주세요.\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-save\">\r\n            <span>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={saveId} // 기본값 value 처럼 보면 된다.\r\n                onChange={e => setSaveId(e.target.checked)} // 행동이 일어나면 setSaveId 값 넣어줌\r\n              /> \r\n              <label>아이디 저장</label>\r\n            </span>\r\n          </div>\r\n\r\n          <div className=\"input-value\">\r\n            <button onClick={loginButton} className=\"btn btn-dark\">로그인</button>\r\n          </div>\r\n\r\n          <div className=\"input-value\">\r\n            <NaverApi />\r\n            \r\n          </div>\r\n\r\n          <div className=\"input-value\">\r\n            <GoogleLogin/>\r\n          </div>\r\n\r\n          <div className='List'>\r\n            <Link to=\"/memberIdFind\">아이디 찾기</Link> \r\n            <p> | </p> \r\n            <Link to=\"/passwordFind\"> 비밀번호 찾기</Link> \r\n            <p> | </p> \r\n            <Link to=\"/registerCheck\"> 회원가입</Link>\r\n          </div>\r\n        </>\r\n      )}\r\n      </div>\r\n    </div>\r\n   </>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}